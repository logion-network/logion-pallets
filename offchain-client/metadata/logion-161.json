[
  1635018093,
  {
    "V15": {
      "types": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 1,
            "type": {
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 2,
            "type": {
              "def": {
                "primitive": "u8"
              }
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce"
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 4,
            "type": {
              "def": {
                "primitive": "u32"
              }
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "flags",
                      "type": 7,
                      "typeName": "ExtraFlags"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 6,
            "type": {
              "def": {
                "primitive": "u128"
              }
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ExtraFlags"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 8,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 9,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 9,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 9,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 10,
                      "typeName": "u64"
                    },
                    {
                      "name": "proof_size",
                      "type": 10,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 10,
            "type": {
              "def": {
                "compact": {
                  "type": 11
                }
              }
            }
          },
          {
            "id": 11,
            "type": {
              "def": {
                "primitive": "u64"
              }
            }
          },
          {
            "id": 12,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 13,
            "type": {
              "def": {
                "sequence": {
                  "type": 2
                }
              }
            }
          },
          {
            "id": 14,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 15,
                      "typeName": "Vec<DigestItem>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 15,
            "type": {
              "def": {
                "sequence": {
                  "type": 16
                }
              }
            }
          },
          {
            "id": 16,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "type": 17,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 17,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 18,
            "type": {
              "def": {
                "sequence": {
                  "type": 19
                }
              }
            }
          },
          {
            "id": 19,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 20
                },
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 64,
                      "typeName": "Phase"
                    },
                    {
                      "name": "event",
                      "type": 20,
                      "typeName": "E"
                    },
                    {
                      "name": "topics",
                      "type": 65,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "logion_node_runtime",
                "RuntimeEvent"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 21,
                          "typeName": "frame_system::Event<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 30,
                          "typeName": "pallet_balances::Event<Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ValidatorSet",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "pallet_validator_set::Event<Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 33,
                          "typeName": "pallet_session::Event"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "type": 34,
                          "typeName": "pallet_grandpa::Event"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "type": 39,
                          "typeName": "pallet_transaction_payment::Event<Runtime>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 40,
                          "typeName": "pallet_sudo::Event<Runtime>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 44,
                          "typeName": "pallet_multisig::Event<Runtime>"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Recovery",
                      "fields": [
                        {
                          "type": 46,
                          "typeName": "pallet_recovery::Event<Runtime>"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "LoAuthorityList",
                      "fields": [
                        {
                          "type": 47,
                          "typeName": "pallet_lo_authority_list::Event<Runtime>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "LogionLoc",
                      "fields": [
                        {
                          "type": 48,
                          "typeName": "pallet_logion_loc::Event<Runtime>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "VerifiedRecovery",
                      "fields": [
                        {
                          "type": 54,
                          "typeName": "pallet_verified_recovery::Event<Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Vault",
                      "fields": [
                        {
                          "type": 55,
                          "typeName": "pallet_logion_vault::Event<Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Vote",
                      "fields": [
                        {
                          "type": 56,
                          "typeName": "pallet_logion_vote::Event<Runtime>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "LogionTreasury",
                      "fields": [
                        {
                          "type": 61,
                          "typeName": "pallet_treasury::Event<Runtime, pallet_treasury::Instance1>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "CommunityTreasury",
                      "fields": [
                        {
                          "type": 62,
                          "typeName": "pallet_treasury::Event<Runtime, pallet_treasury::Instance2>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 63,
                          "typeName": "pallet_utility::Event"
                        }
                      ],
                      "index": 23
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 25,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 23,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "pays_fee",
                      "type": 24,
                      "typeName": "Pays"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "index": 0
                    },
                    {
                      "name": "Operational",
                      "index": 1
                    },
                    {
                      "name": "Mandatory",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "index": 0
                    },
                    {
                      "name": "No",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "index": 0
                    },
                    {
                      "name": "CannotLookup",
                      "index": 1
                    },
                    {
                      "name": "BadOrigin",
                      "index": 2
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "type": 26,
                          "typeName": "ModuleError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ConsumerRemaining",
                      "index": 4
                    },
                    {
                      "name": "NoProviders",
                      "index": 5
                    },
                    {
                      "name": "TooManyConsumers",
                      "index": 6
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "type": 27,
                          "typeName": "TokenError"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "type": 28,
                          "typeName": "ArithmeticError"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "type": 29,
                          "typeName": "TransactionalError"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Exhausted",
                      "index": 10
                    },
                    {
                      "name": "Corruption",
                      "index": 11
                    },
                    {
                      "name": "Unavailable",
                      "index": 12
                    },
                    {
                      "name": "RootNotAllowed",
                      "index": 13
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "error",
                      "type": 17,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "index": 0
                    },
                    {
                      "name": "OnlyProvider",
                      "index": 1
                    },
                    {
                      "name": "BelowMinimum",
                      "index": 2
                    },
                    {
                      "name": "CannotCreate",
                      "index": 3
                    },
                    {
                      "name": "UnknownAsset",
                      "index": 4
                    },
                    {
                      "name": "Frozen",
                      "index": 5
                    },
                    {
                      "name": "Unsupported",
                      "index": 6
                    },
                    {
                      "name": "CannotCreateHold",
                      "index": 7
                    },
                    {
                      "name": "NotExpendable",
                      "index": 8
                    },
                    {
                      "name": "Blocked",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "index": 0
                    },
                    {
                      "name": "Overflow",
                      "index": 1
                    },
                    {
                      "name": "DivisionByZero",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "index": 0
                    },
                    {
                      "name": "NoLayer",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "destination_status",
                          "type": 31,
                          "typeName": "Status"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Some amount was minted into an account."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some amount was burned from an account."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some amount was suspended from an account (it can be restored later)."
                      ]
                    },
                    {
                      "name": "Restored",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some amount was restored into an account."
                      ]
                    },
                    {
                      "name": "Upgraded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "An account was upgraded."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Total issuance was increased by `amount`, creating a credit to be balanced."
                      ]
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Total issuance was decreased by `amount`, creating a debt to be balanced."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Some balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Some balance was unlocked."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some balance was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Some balance was thawed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "index": 0
                    },
                    {
                      "name": "Reserved",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 32,
            "type": {
              "path": [
                "substrate_validator_set",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ValidatorAdditionInitiated",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New validator addition initiated. Effective in ~2 sessions."
                      ]
                    },
                    {
                      "name": "ValidatorRemovalInitiated",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Validator removal initiated. Effective in ~2 sessions."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewAuthorities",
                      "fields": [
                        {
                          "name": "authority_set",
                          "type": 35,
                          "typeName": "AuthorityList"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New authority set has been applied."
                      ]
                    },
                    {
                      "name": "Paused",
                      "index": 1,
                      "docs": [
                        "Current authority set has been paused."
                      ]
                    },
                    {
                      "name": "Resumed",
                      "index": 2,
                      "docs": [
                        "Current authority set has been resumed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 35,
            "type": {
              "def": {
                "sequence": {
                  "type": 36
                }
              }
            }
          },
          {
            "id": 36,
            "type": {
              "def": {
                "tuple": [
                  37,
                  11
                ]
              }
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 38,
                      "typeName": "ed25519::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 39,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Sudid",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 41,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A sudo call just took place."
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [
                        {
                          "name": "old",
                          "type": 43,
                          "typeName": "Option<T::AccountId>",
                          "docs": [
                            "The old sudo key (if one was previously set)."
                          ]
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The new sudo key (if one was set)."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The sudo key has been updated."
                      ]
                    },
                    {
                      "name": "KeyRemoved",
                      "index": 2,
                      "docs": [
                        "The key was permanently removed."
                      ]
                    },
                    {
                      "name": "SudoAsDone",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 41,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A [sudo_as](Pallet::sudo_as) call just took place."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 42
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 42
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 25
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 42,
            "type": {
              "def": {
                "tuple": []
              }
            }
          },
          {
            "id": 43,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 0
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 44,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewMultisig",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new multisig operation has begun."
                      ]
                    },
                    {
                      "name": "MultisigApproval",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 45,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A multisig operation has been approved by someone."
                      ]
                    },
                    {
                      "name": "MultisigExecuted",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 45,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        },
                        {
                          "name": "result",
                          "type": 41,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A multisig operation has been executed."
                      ]
                    },
                    {
                      "name": "MultisigCancelled",
                      "fields": [
                        {
                          "name": "cancelling",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "timepoint",
                          "type": 45,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A multisig operation has been cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 45,
            "type": {
              "path": [
                "pallet_multisig",
                "Timepoint"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 46,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RecoveryCreated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A recovery process has been set up for an account."
                      ]
                    },
                    {
                      "name": "RecoveryInitiated",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A recovery process has been initiated for lost account by rescuer account."
                      ]
                    },
                    {
                      "name": "RecoveryVouched",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A recovery process for lost account by rescuer account has been vouched for by sender."
                      ]
                    },
                    {
                      "name": "RecoveryClosed",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A recovery process for lost account by rescuer account has been closed."
                      ]
                    },
                    {
                      "name": "AccountRecovered",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Lost account has been successfully recovered by rescuer account."
                      ]
                    },
                    {
                      "name": "RecoveryRemoved",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A recovery process has been removed for an account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 47,
            "type": {
              "path": [
                "pallet_lo_authority_list",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LoAdded",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Issued when an LO is added to the list. [accountId]"
                      ]
                    },
                    {
                      "name": "LoRemoved",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Issued when an LO is removed from the list. [accountId]"
                      ]
                    },
                    {
                      "name": "LoUpdated",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Issued when an LO is updated. [accountId]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 48,
            "type": {
              "path": [
                "pallet_logion_loc",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LocCreated",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Issued upon LOC creation. [locId]"
                      ]
                    },
                    {
                      "name": "LocClosed",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Issued when LOC is closed. [locId]"
                      ]
                    },
                    {
                      "name": "LocVoid",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Issued when LOC is voided. [locId]"
                      ]
                    },
                    {
                      "name": "ItemAdded",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "T::LocId"
                        },
                        {
                          "type": 12,
                          "typeName": "T::CollectionItemId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Issued when an item was added to a collection. [locId, collectionItemId]"
                      ]
                    },
                    {
                      "name": "StorageFeeWithdrawn",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Issued when File Storage Fee is withdrawn. [payerAccountId, storageFee]"
                      ]
                    },
                    {
                      "name": "SponsorshipCreated",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "T::SponsorshipId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 49,
                          "typeName": "SupportedAccountId<T::AccountId, T::EthereumAddress>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Issued when a sponsorship was successfully created [sponsorship_id, sponsor, sponsored_account]"
                      ]
                    },
                    {
                      "name": "SponsorshipWithdrawn",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "T::SponsorshipId"
                        },
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 49,
                          "typeName": "SupportedAccountId<T::AccountId, T::EthereumAddress>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Issued when a sponsorship was successfully withdrawn [sponsorship_id, sponsor, sponsored_account]"
                      ]
                    },
                    {
                      "name": "LegalFeeWithdrawn",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 53,
                          "typeName": "Beneficiary<T::AccountId>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Issued when Legal Fee is withdrawn. [payerAccountId, beneficiary, legalFee]"
                      ]
                    },
                    {
                      "name": "CertificateFeeWithdrawn",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Issued when Certificate Fee is withdrawn. [payerAccountId, fee]"
                      ]
                    },
                    {
                      "name": "ValueFeeWithdrawn",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Issued when Value Fee is withdrawn. [payerAccountId, storageFee]"
                      ]
                    },
                    {
                      "name": "CollectionItemFeeWithdrawn",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 53,
                          "typeName": "Beneficiary<T::AccountId>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Issued when Collection Item Fee is withdrawn. [payerAccountId, fee, beneficiary, amountReceived]"
                      ]
                    },
                    {
                      "name": "TokensRecordFeeWithdrawn",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "type": 53,
                          "typeName": "Beneficiary<T::AccountId>"
                        },
                        {
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Issued when Token Record Fee is withdrawn. [payerAccountId, fee, beneficiary, amountReceived]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 49,
            "type": {
              "path": [
                "pallet_logion_loc",
                "SupportedAccountId"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Polkadot",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 52,
                          "typeName": "OtherAccountId<EthereumAddress>"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "primitive_types",
                "H160"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 51,
                      "typeName": "[u8; 20]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 51,
            "type": {
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 52,
            "type": {
              "path": [
                "pallet_logion_loc",
                "OtherAccountId"
              ],
              "params": [
                {
                  "name": "EthereumAddress",
                  "type": 50
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "type": 50,
                          "typeName": "EthereumAddress"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "logion_shared",
                "Beneficiary"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "index": 0
                    },
                    {
                      "name": "LegalOfficer",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "pallet_verified_recovery",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 55,
            "type": {
              "path": [
                "pallet_logion_vault",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {}
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 56,
            "type": {
              "path": [
                "pallet_logion_vote",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VoteCreated",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "VoteId"
                        },
                        {
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Issued upon new Vote creation. [voteId, legalOfficers]"
                      ]
                    },
                    {
                      "name": "VoteUpdated",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "VoteId"
                        },
                        {
                          "type": 58,
                          "typeName": "Ballot<T::AccountId>"
                        },
                        {
                          "type": 60,
                          "typeName": "VoteClosed"
                        },
                        {
                          "type": 60,
                          "typeName": "VoteApproved"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Issued upon new Vote creation. [voteId, ballot, closed, approved]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 57,
            "type": {
              "def": {
                "sequence": {
                  "type": 0
                }
              }
            }
          },
          {
            "id": 58,
            "type": {
              "path": [
                "pallet_logion_vote",
                "Ballot"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "voter",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "status",
                      "type": 59,
                      "typeName": "BallotStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "pallet_logion_vote",
                "BallotStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotVoted",
                      "index": 0
                    },
                    {
                      "name": "VotedYes",
                      "index": 1
                    },
                    {
                      "name": "VotedNo",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 60,
            "type": {
              "def": {
                "primitive": "bool"
              }
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New proposal."
                      ]
                    },
                    {
                      "name": "Spending",
                      "fields": [
                        {
                          "name": "budget_remaining",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "We have ended a spend period and will now allocate funds."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "award",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some funds have been allocated."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "slashed",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "Burnt",
                      "fields": [
                        {
                          "name": "burnt_funds",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some of our funds have been burnt."
                      ]
                    },
                    {
                      "name": "Rollover",
                      "fields": [
                        {
                          "name": "rollover_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Spending has finished; this is the amount that rolls over until next spend."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some funds have been deposited."
                      ]
                    },
                    {
                      "name": "SpendApproved",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A new spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "UpdatedInactive",
                      "fields": [
                        {
                          "name": "reactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "deactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The inactive funds of the pallet have been updated."
                      ]
                    },
                    {
                      "name": "AssetSpendApproved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "asset_kind",
                          "type": 42,
                          "typeName": "T::AssetKind"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::Beneficiary"
                        },
                        {
                          "name": "valid_from",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "expire_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A new asset spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "AssetSpendVoided",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "An approved spend was voided."
                      ]
                    },
                    {
                      "name": "Paid",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "payment_id",
                          "type": 42,
                          "typeName": "<T::Paymaster as Pay>::Id"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A payment happened."
                      ]
                    },
                    {
                      "name": "PaymentFailed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "payment_id",
                          "type": 42,
                          "typeName": "<T::Paymaster as Pay>::Id"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A payment failed and can be retried."
                      ]
                    },
                    {
                      "name": "SpendProcessed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A spend was processed and removed from the storage. It might have been successfully",
                        "paid or it may have expired."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New proposal."
                      ]
                    },
                    {
                      "name": "Spending",
                      "fields": [
                        {
                          "name": "budget_remaining",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "We have ended a spend period and will now allocate funds."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "award",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some funds have been allocated."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "slashed",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "Burnt",
                      "fields": [
                        {
                          "name": "burnt_funds",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some of our funds have been burnt."
                      ]
                    },
                    {
                      "name": "Rollover",
                      "fields": [
                        {
                          "name": "rollover_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Spending has finished; this is the amount that rolls over until next spend."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some funds have been deposited."
                      ]
                    },
                    {
                      "name": "SpendApproved",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A new spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "UpdatedInactive",
                      "fields": [
                        {
                          "name": "reactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "deactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The inactive funds of the pallet have been updated."
                      ]
                    },
                    {
                      "name": "AssetSpendApproved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "asset_kind",
                          "type": 42,
                          "typeName": "T::AssetKind"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::Beneficiary"
                        },
                        {
                          "name": "valid_from",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "expire_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A new asset spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "AssetSpendVoided",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "An approved spend was voided."
                      ]
                    },
                    {
                      "name": "Paid",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "payment_id",
                          "type": 42,
                          "typeName": "<T::Paymaster as Pay>::Id"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A payment happened."
                      ]
                    },
                    {
                      "name": "PaymentFailed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        },
                        {
                          "name": "payment_id",
                          "type": 42,
                          "typeName": "<T::Paymaster as Pay>::Id"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A payment failed and can be retried."
                      ]
                    },
                    {
                      "name": "SpendProcessed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A spend was processed and removed from the storage. It might have been successfully",
                        "paid or it may have expired."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 63,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchInterrupted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                        "well as the error."
                      ]
                    },
                    {
                      "name": "BatchCompleted",
                      "index": 1,
                      "docs": [
                        "Batch of dispatches completed fully with no error."
                      ]
                    },
                    {
                      "name": "BatchCompletedWithErrors",
                      "index": 2,
                      "docs": [
                        "Batch of dispatches completed but has errors."
                      ]
                    },
                    {
                      "name": "ItemCompleted",
                      "index": 3,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with no error."
                      ]
                    },
                    {
                      "name": "ItemFailed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with error."
                      ]
                    },
                    {
                      "name": "DispatchedAs",
                      "fields": [
                        {
                          "name": "result",
                          "type": 41,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A call was dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 64,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Finalization",
                      "index": 1
                    },
                    {
                      "name": "Initialization",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 65,
            "type": {
              "def": {
                "sequence": {
                  "type": 12
                }
              }
            }
          },
          {
            "id": 66,
            "type": {
              "def": {
                "sequence": {
                  "type": 67
                }
              }
            }
          },
          {
            "id": 67,
            "type": {
              "def": {
                "tuple": [
                  4,
                  4
                ]
              }
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 69,
                      "typeName": "codec::Compact<u32>"
                    },
                    {
                      "name": "spec_name",
                      "type": 70,
                      "typeName": "sp_runtime::RuntimeString"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 69,
            "type": {
              "def": {
                "compact": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 70,
            "type": {
              "def": {
                "primitive": "str"
              }
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remark`]."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 11,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_heap_pages`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_code_without_checks`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 72,
                          "typeName": "Vec<KeyValue>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 74,
                          "typeName": "Vec<Key>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_storage`]."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 13,
                          "typeName": "Key"
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::kill_prefix`]."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remark_with_event`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 72,
            "type": {
              "def": {
                "sequence": {
                  "type": 73
                }
              }
            }
          },
          {
            "id": 73,
            "type": {
              "def": {
                "tuple": [
                  13,
                  13
                ]
              }
            }
          },
          {
            "id": 74,
            "type": {
              "def": {
                "sequence": {
                  "type": 13
                }
              }
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_block",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "per_class",
                      "type": 76,
                      "typeName": "PerDispatchClass<WeightsPerClass>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 77
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 77,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 77,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 77,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 77,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 78,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "max_total",
                      "type": 78,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "reserved",
                      "type": 78,
                      "typeName": "Option<Weight>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 78,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 9
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 80,
                      "typeName": "PerDispatchClass<u32>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 80,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "write",
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 82,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 70,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "impl_name",
                      "type": 70,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "apis",
                      "type": 83,
                      "typeName": "ApisVec"
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 83,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 84
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 84
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 84,
            "type": {
              "def": {
                "sequence": {
                  "type": 85
                }
              }
            }
          },
          {
            "id": 85,
            "type": {
              "def": {
                "tuple": [
                  86,
                  4
                ]
              }
            }
          },
          {
            "id": 86,
            "type": {
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 87,
            "type": {
              "def": {
                "primitive": "u16"
              }
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 10,
                          "typeName": "T::Moment"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 90,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 91
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 93,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 86,
                      "typeName": "LockIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reasons",
                      "type": 92,
                      "typeName": "Reasons"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 92,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "Reasons"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "index": 0
                    },
                    {
                      "name": "Misc",
                      "index": 1
                    },
                    {
                      "name": "All",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 93,
            "type": {
              "def": {
                "sequence": {
                  "type": 91
                }
              }
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 95
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 96,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 95,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 86
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 86,
                      "typeName": "ReserveIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 96,
            "type": {
              "def": {
                "sequence": {
                  "type": 95
                }
              }
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 98
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 99,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 98,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 42
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 42,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 99,
            "type": {
              "def": {
                "sequence": {
                  "type": 98
                }
              }
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 101
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 102,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 86
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 86,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 102,
            "type": {
              "def": {
                "sequence": {
                  "type": 101
                }
              }
            }
          },
          {
            "id": 103,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer_allow_death`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "dest",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "keep_alive",
                          "type": 60,
                          "typeName": "bool"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_all`]."
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_unreserve`]."
                      ]
                    },
                    {
                      "name": "upgrade_accounts",
                      "fields": [
                        {
                          "name": "who",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::upgrade_accounts`]."
                      ]
                    },
                    {
                      "name": "force_set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "new_free",
                          "type": 106,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::force_set_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 104,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AccountIndex",
                  "type": 42
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 105,
                          "typeName": "AccountIndex"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "type": 51,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 105,
            "type": {
              "def": {
                "compact": {
                  "type": 42
                }
              }
            }
          },
          {
            "id": 106,
            "type": {
              "def": {
                "compact": {
                  "type": 6
                }
              }
            }
          },
          {
            "id": 107,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value."
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "index": 2,
                      "docs": [
                        "Balance too low to send value."
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit."
                      ]
                    },
                    {
                      "name": "Expendability",
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account."
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account."
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed `MaxReserves`."
                      ]
                    },
                    {
                      "name": "TooManyHolds",
                      "index": 8,
                      "docs": [
                        "Number of holds exceed `MaxHolds`."
                      ]
                    },
                    {
                      "name": "TooManyFreezes",
                      "index": 9,
                      "docs": [
                        "Number of freezes exceed `MaxFreezes`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "substrate_validator_set",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_validator",
                      "fields": [
                        {
                          "name": "validator_id",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_validator`]."
                      ]
                    },
                    {
                      "name": "remove_validator",
                      "fields": [
                        {
                          "name": "validator_id",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_validator`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "substrate_validator_set",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooLowValidatorCount",
                      "index": 0,
                      "docs": [
                        "Target (post-removal) validator count is below the minimum."
                      ]
                    },
                    {
                      "name": "Duplicate",
                      "index": 1,
                      "docs": [
                        "Validator is already in the validator set."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 110,
            "type": {
              "def": {
                "sequence": {
                  "type": 111
                }
              }
            }
          },
          {
            "id": 111,
            "type": {
              "def": {
                "tuple": [
                  0,
                  112
                ]
              }
            }
          },
          {
            "id": 112,
            "type": {
              "path": [
                "logion_node_runtime",
                "opaque",
                "SessionKeys"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "aura",
                      "type": 113,
                      "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public"
                    },
                    {
                      "name": "grandpa",
                      "type": 37,
                      "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "sp_consensus_aura",
                "sr25519",
                "app_sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 114,
                      "typeName": "sr25519::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 115,
            "type": {
              "def": {
                "sequence": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 116,
            "type": {
              "def": {
                "tuple": [
                  117,
                  13
                ]
              }
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 17,
                      "typeName": "[u8; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 112,
                          "typeName": "T::Keys"
                        },
                        {
                          "name": "proof",
                          "type": 13,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "index": 1,
                      "docs": [
                        "See [`Pallet::purge_keys`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 119,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 113
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 121,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 121,
            "type": {
              "def": {
                "sequence": {
                  "type": 113
                }
              }
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 123,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredState"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Live",
                      "index": 0
                    },
                    {
                      "name": "PendingPause",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Paused",
                      "index": 2
                    },
                    {
                      "name": "PendingResume",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredPendingChange"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "Limit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "scheduled_at",
                      "type": 4,
                      "typeName": "N"
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "N"
                    },
                    {
                      "name": "next_authorities",
                      "type": 125,
                      "typeName": "BoundedAuthorityList<Limit>"
                    },
                    {
                      "name": "forced",
                      "type": 126,
                      "typeName": "Option<N>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 36
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 35,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 126,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 4
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_equivocation",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 128,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>"
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 139,
                          "typeName": "T::KeyOwnerProof"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_equivocation`]."
                      ]
                    },
                    {
                      "name": "report_equivocation_unsigned",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 128,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>"
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 139,
                          "typeName": "T::KeyOwnerProof"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_equivocation_unsigned`]."
                      ]
                    },
                    {
                      "name": "note_stalled",
                      "fields": [
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "best_finalized_block_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::note_stalled`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 128,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "EquivocationProof"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "set_id",
                      "type": 11,
                      "typeName": "SetId"
                    },
                    {
                      "name": "equivocation",
                      "type": 129,
                      "typeName": "Equivocation<H, N>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 129,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Prevote",
                      "fields": [
                        {
                          "type": 130,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Precommit",
                      "fields": [
                        {
                          "type": 136,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 130,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 37
                },
                {
                  "name": "V",
                  "type": 131
                },
                {
                  "name": "S",
                  "type": 132
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "identity",
                      "type": 37,
                      "typeName": "Id"
                    },
                    {
                      "name": "first",
                      "type": 135,
                      "typeName": "(V, S)"
                    },
                    {
                      "name": "second",
                      "type": 135,
                      "typeName": "(V, S)"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "finality_grandpa",
                "Prevote"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H"
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 133,
                      "typeName": "ed25519::Signature"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 134,
                      "typeName": "[u8; 64]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 134,
            "type": {
              "def": {
                "array": {
                  "len": 64,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 135,
            "type": {
              "def": {
                "tuple": [
                  131,
                  132
                ]
              }
            }
          },
          {
            "id": 136,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 37
                },
                {
                  "name": "V",
                  "type": 137
                },
                {
                  "name": "S",
                  "type": 132
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "identity",
                      "type": 37,
                      "typeName": "Id"
                    },
                    {
                      "name": "first",
                      "type": 138,
                      "typeName": "(V, S)"
                    },
                    {
                      "name": "second",
                      "type": 138,
                      "typeName": "(V, S)"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 137,
            "type": {
              "path": [
                "finality_grandpa",
                "Precommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H"
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 138,
            "type": {
              "def": {
                "tuple": [
                  137,
                  132
                ]
              }
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "sp_core",
                "Void"
              ],
              "def": {
                "variant": {}
              }
            }
          },
          {
            "id": 140,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PauseFailed",
                      "index": 0,
                      "docs": [
                        "Attempt to signal GRANDPA pause when the authority set isn't live",
                        "(either paused or already pending pause)."
                      ]
                    },
                    {
                      "name": "ResumeFailed",
                      "index": 1,
                      "docs": [
                        "Attempt to signal GRANDPA resume when the authority set isn't paused",
                        "(either live or already pending resume)."
                      ]
                    },
                    {
                      "name": "ChangePending",
                      "index": 2,
                      "docs": [
                        "Attempt to signal GRANDPA change with one already pending."
                      ]
                    },
                    {
                      "name": "TooSoon",
                      "index": 3,
                      "docs": [
                        "Cannot signal forced change so soon after last."
                      ]
                    },
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "index": 4,
                      "docs": [
                        "A key ownership proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "InvalidEquivocationProof",
                      "index": 5,
                      "docs": [
                        "An equivocation proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "DuplicateOffenceReport",
                      "index": 6,
                      "docs": [
                        "A given equivocation report is valid but already previously reported."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 141,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 142,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "index": 0
                    },
                    {
                      "name": "V2",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "sudo",
                      "fields": [
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::sudo`]."
                      ]
                    },
                    {
                      "name": "sudo_unchecked_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_unchecked_weight`]."
                      ]
                    },
                    {
                      "name": "set_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_key`]."
                      ]
                    },
                    {
                      "name": "sudo_as",
                      "fields": [
                        {
                          "name": "who",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::sudo_as`]."
                      ]
                    },
                    {
                      "name": "remove_key",
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_key`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 144,
            "type": {
              "path": [
                "logion_node_runtime",
                "RuntimeCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 71,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "type": 89,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 103,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ValidatorSet",
                      "fields": [
                        {
                          "type": 108,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ValidatorSet, Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 118,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "type": 127,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 143,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 145,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Recovery",
                      "fields": [
                        {
                          "type": 147,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Recovery, Runtime>"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "LoAuthorityList",
                      "fields": [
                        {
                          "type": 148,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LoAuthorityList, Runtime>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "LogionLoc",
                      "fields": [
                        {
                          "type": 155,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LogionLoc, Runtime>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "VerifiedRecovery",
                      "fields": [
                        {
                          "type": 172,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VerifiedRecovery, Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Vault",
                      "fields": [
                        {
                          "type": 173,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vault, Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Vote",
                      "fields": [
                        {
                          "type": 174,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vote, Runtime>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "LogionTreasury",
                      "fields": [
                        {
                          "type": 175,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LogionTreasury, Runtime>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "CommunityTreasury",
                      "fields": [
                        {
                          "type": 176,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CommunityTreasury, Runtime>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 177,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>"
                        }
                      ],
                      "index": 23
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 145,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_multi_threshold_1",
                      "fields": [
                        {
                          "name": "other_signatories",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_multi_threshold_1`]."
                      ]
                    },
                    {
                      "name": "as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 87,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 146,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_multi`]."
                      ]
                    },
                    {
                      "name": "approve_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 87,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 146,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_as_multi`]."
                      ]
                    },
                    {
                      "name": "cancel_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 87,
                          "typeName": "u16"
                        },
                        {
                          "name": "other_signatories",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "timepoint",
                          "type": 45,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_as_multi`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 146,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 45
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 45
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 147,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_recovered",
                      "fields": [
                        {
                          "name": "account",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_recovered`]."
                      ]
                    },
                    {
                      "name": "set_recovered",
                      "fields": [
                        {
                          "name": "lost",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "rescuer",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_recovered`]."
                      ]
                    },
                    {
                      "name": "create_recovery",
                      "fields": [
                        {
                          "name": "friends",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "threshold",
                          "type": 87,
                          "typeName": "u16"
                        },
                        {
                          "name": "delay_period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::create_recovery`]."
                      ]
                    },
                    {
                      "name": "initiate_recovery",
                      "fields": [
                        {
                          "name": "account",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::initiate_recovery`]."
                      ]
                    },
                    {
                      "name": "vouch_recovery",
                      "fields": [
                        {
                          "name": "lost",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "rescuer",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vouch_recovery`]."
                      ]
                    },
                    {
                      "name": "claim_recovery",
                      "fields": [
                        {
                          "name": "account",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::claim_recovery`]."
                      ]
                    },
                    {
                      "name": "close_recovery",
                      "fields": [
                        {
                          "name": "rescuer",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close_recovery`]."
                      ]
                    },
                    {
                      "name": "remove_recovery",
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_recovery`]."
                      ]
                    },
                    {
                      "name": "cancel_recovered",
                      "fields": [
                        {
                          "name": "account",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::cancel_recovered`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 148,
            "type": {
              "path": [
                "pallet_lo_authority_list",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_legal_officer",
                      "fields": [
                        {
                          "name": "legal_officer_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "data",
                          "type": 149,
                          "typeName": "LegalOfficerDataOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_legal_officer`]."
                      ]
                    },
                    {
                      "name": "remove_legal_officer",
                      "fields": [
                        {
                          "name": "legal_officer_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_legal_officer`]."
                      ]
                    },
                    {
                      "name": "update_legal_officer",
                      "fields": [
                        {
                          "name": "legal_officer_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "data",
                          "type": 149,
                          "typeName": "LegalOfficerDataOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::update_legal_officer`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "pallet_lo_authority_list",
                "LegalOfficerData"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Region",
                  "type": 150
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Host",
                      "fields": [
                        {
                          "type": 151,
                          "typeName": "HostData<Region>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Guest",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "logion_node_runtime",
                "Region"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Europe",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 151,
            "type": {
              "path": [
                "pallet_lo_authority_list",
                "HostData"
              ],
              "params": [
                {
                  "name": "Region",
                  "type": 150
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "node_id",
                      "type": 152,
                      "typeName": "Option<PeerId>"
                    },
                    {
                      "name": "base_url",
                      "type": 154,
                      "typeName": "Option<Vec<u8>>"
                    },
                    {
                      "name": "region",
                      "type": 150,
                      "typeName": "Region"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 152,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 153
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 153
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "sp_core",
                "OpaquePeerId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 13
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "pallet_logion_loc",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create_polkadot_identity_loc",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "legal_officer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "legal_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "items",
                          "type": 156,
                          "typeName": "ItemsParamsOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create_polkadot_identity_loc`]."
                      ]
                    },
                    {
                      "name": "create_logion_identity_loc",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::create_logion_identity_loc`]."
                      ]
                    },
                    {
                      "name": "create_polkadot_transaction_loc",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "legal_officer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "legal_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "items",
                          "type": 156,
                          "typeName": "ItemsParamsOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::create_polkadot_transaction_loc`]."
                      ]
                    },
                    {
                      "name": "create_logion_transaction_loc",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "requester_loc_id",
                          "type": 6,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::create_logion_transaction_loc`]."
                      ]
                    },
                    {
                      "name": "create_collection_loc",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "legal_officer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "collection_last_block_submission",
                          "type": 126,
                          "typeName": "Option<BlockNumberFor<T>>"
                        },
                        {
                          "name": "collection_max_size",
                          "type": 126,
                          "typeName": "Option<u32>"
                        },
                        {
                          "name": "collection_can_upload",
                          "type": 60,
                          "typeName": "bool"
                        },
                        {
                          "name": "value_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "legal_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "collection_item_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "tokens_record_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "items",
                          "type": 156,
                          "typeName": "ItemsParamsOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::create_collection_loc`]."
                      ]
                    },
                    {
                      "name": "add_metadata",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "item",
                          "type": 158,
                          "typeName": "MetadataItemParamsOf<T>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::add_metadata`]."
                      ]
                    },
                    {
                      "name": "add_file",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "file",
                          "type": 160,
                          "typeName": "FileParamsOf<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::add_file`]."
                      ]
                    },
                    {
                      "name": "add_link",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "link",
                          "type": 162,
                          "typeName": "LocLinkParamsOf<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::add_link`]."
                      ]
                    },
                    {
                      "name": "make_void",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::make_void`]."
                      ]
                    },
                    {
                      "name": "make_void_and_replace",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "replacer_loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::make_void_and_replace`]."
                      ]
                    },
                    {
                      "name": "add_collection_item",
                      "fields": [
                        {
                          "name": "collection_loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "item_id",
                          "type": 12,
                          "typeName": "T::CollectionItemId"
                        },
                        {
                          "name": "item_description",
                          "type": 12,
                          "typeName": "<T as Config>::Hash"
                        },
                        {
                          "name": "item_files",
                          "type": 163,
                          "typeName": "Vec<CollectionItemFileOf<T>>"
                        },
                        {
                          "name": "item_token",
                          "type": 165,
                          "typeName": "Option<CollectionItemToken<T::TokenIssuance,<T as Config>::Hash>>"
                        },
                        {
                          "name": "restricted_delivery",
                          "type": 60,
                          "typeName": "bool"
                        },
                        {
                          "name": "terms_and_conditions",
                          "type": 167,
                          "typeName": "Vec<TermsAndConditionsElement<T::LocId,<T as Config>::Hash>>"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::add_collection_item`]."
                      ]
                    },
                    {
                      "name": "nominate_issuer",
                      "fields": [
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "identity_loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::nominate_issuer`]."
                      ]
                    },
                    {
                      "name": "dismiss_issuer",
                      "fields": [
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::dismiss_issuer`]."
                      ]
                    },
                    {
                      "name": "set_issuer_selection",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "selected",
                          "type": 60,
                          "typeName": "bool"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::set_issuer_selection`]."
                      ]
                    },
                    {
                      "name": "add_tokens_record",
                      "fields": [
                        {
                          "name": "collection_loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "record_id",
                          "type": 12,
                          "typeName": "T::TokensRecordId"
                        },
                        {
                          "name": "description",
                          "type": 12,
                          "typeName": "<T as Config>::Hash"
                        },
                        {
                          "name": "files",
                          "type": 169,
                          "typeName": "Vec<TokensRecordFileOf<T>>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::add_tokens_record`]."
                      ]
                    },
                    {
                      "name": "create_other_identity_loc",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "requester_account_id",
                          "type": 52,
                          "typeName": "OtherAccountId<T::EthereumAddress>"
                        },
                        {
                          "name": "sponsorship_id",
                          "type": 106,
                          "typeName": "T::SponsorshipId"
                        },
                        {
                          "name": "legal_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::create_other_identity_loc`]."
                      ]
                    },
                    {
                      "name": "sponsor",
                      "fields": [
                        {
                          "name": "sponsorship_id",
                          "type": 106,
                          "typeName": "T::SponsorshipId"
                        },
                        {
                          "name": "sponsored_account",
                          "type": 49,
                          "typeName": "SupportedAccountId<T::AccountId, T::EthereumAddress>"
                        },
                        {
                          "name": "legal_officer",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::sponsor`]."
                      ]
                    },
                    {
                      "name": "withdraw_sponsorship",
                      "fields": [
                        {
                          "name": "sponsorship_id",
                          "type": 106,
                          "typeName": "T::SponsorshipId"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::withdraw_sponsorship`]."
                      ]
                    },
                    {
                      "name": "acknowledge_metadata",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "name",
                          "type": 12,
                          "typeName": "<T as pallet::Config>::Hash"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::acknowledge_metadata`]."
                      ]
                    },
                    {
                      "name": "acknowledge_file",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "<T as pallet::Config>::Hash"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::acknowledge_file`]."
                      ]
                    },
                    {
                      "name": "acknowledge_link",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "target",
                          "type": 106,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::acknowledge_link`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "seal",
                          "type": 171,
                          "typeName": "Option<<T as Config>::Hash>"
                        },
                        {
                          "name": "auto_ack",
                          "type": 60,
                          "typeName": "bool"
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    },
                    {
                      "name": "set_invited_contributor_selection",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        },
                        {
                          "name": "invited_contributor",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "selected",
                          "type": 60,
                          "typeName": "bool"
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::set_invited_contributor_selection`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "pallet_logion_loc",
                "ItemsParams"
              ],
              "params": [
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                },
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "metadata",
                      "type": 157,
                      "typeName": "Vec<MetadataItemParams<AccountId, EthereumAddress, Hash>>"
                    },
                    {
                      "name": "files",
                      "type": 159,
                      "typeName": "Vec<FileParams<Hash, AccountId, EthereumAddress>>"
                    },
                    {
                      "name": "links",
                      "type": 161,
                      "typeName": "Vec<LocLinkParams<LocId, Hash, AccountId, EthereumAddress>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 157,
            "type": {
              "def": {
                "sequence": {
                  "type": 158
                }
              }
            }
          },
          {
            "id": 158,
            "type": {
              "path": [
                "pallet_logion_loc",
                "MetadataItemParams"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                },
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "value",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "submitter",
                      "type": 49,
                      "typeName": "SupportedAccountId<AccountId, EthereumAddress>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 159,
            "type": {
              "def": {
                "sequence": {
                  "type": 160
                }
              }
            }
          },
          {
            "id": 160,
            "type": {
              "path": [
                "pallet_logion_loc",
                "FileParams"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "hash",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "nature",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "submitter",
                      "type": 49,
                      "typeName": "SupportedAccountId<AccountId, EthereumAddress>"
                    },
                    {
                      "name": "size",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 161,
            "type": {
              "def": {
                "sequence": {
                  "type": 162
                }
              }
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "pallet_logion_loc",
                "LocLinkParams"
              ],
              "params": [
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 6,
                      "typeName": "LocId"
                    },
                    {
                      "name": "nature",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "submitter",
                      "type": 49,
                      "typeName": "SupportedAccountId<AccountId, EthereumAddress>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 163,
            "type": {
              "def": {
                "sequence": {
                  "type": 164
                }
              }
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "pallet_logion_loc",
                "CollectionItemFile"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "content_type",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "hash",
                      "type": 12,
                      "typeName": "Hash"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 165,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 166
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 166
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 166,
            "type": {
              "path": [
                "pallet_logion_loc",
                "CollectionItemToken"
              ],
              "params": [
                {
                  "name": "TokenIssuance",
                  "type": 11
                },
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "token_type",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "token_id",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "token_issuance",
                      "type": 11,
                      "typeName": "TokenIssuance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 167,
            "type": {
              "def": {
                "sequence": {
                  "type": 168
                }
              }
            }
          },
          {
            "id": 168,
            "type": {
              "path": [
                "pallet_logion_loc",
                "TermsAndConditionsElement"
              ],
              "params": [
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "tc_type",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "tc_loc",
                      "type": 6,
                      "typeName": "LocId"
                    },
                    {
                      "name": "details",
                      "type": 12,
                      "typeName": "Hash"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 169,
            "type": {
              "def": {
                "sequence": {
                  "type": 170
                }
              }
            }
          },
          {
            "id": 170,
            "type": {
              "path": [
                "pallet_logion_loc",
                "TokensRecordFile"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "content_type",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "hash",
                      "type": 12,
                      "typeName": "Hash"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 12
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 172,
            "type": {
              "path": [
                "pallet_verified_recovery",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create_recovery",
                      "fields": [
                        {
                          "name": "legal_officers",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create_recovery`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 173,
            "type": {
              "path": [
                "pallet_logion_vault",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "request_call",
                      "fields": [
                        {
                          "name": "legal_officers",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::request_call`]."
                      ]
                    },
                    {
                      "name": "approve_call",
                      "fields": [
                        {
                          "name": "other_signatories",
                          "type": 57,
                          "typeName": "Vec<T::AccountId>"
                        },
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<<T as pallet::Config>::MultisigAsMultiCallFactory as\nMultisigAsMultiCallFactory<T::RuntimeOrigin, T::AccountId, Timepoint<\nBlockNumberFor<T>>>>::Call>"
                        },
                        {
                          "name": "timepoint",
                          "type": 45,
                          "typeName": "Timepoint<BlockNumberFor<T>>"
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::approve_call`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 174,
            "type": {
              "path": [
                "pallet_logion_vote",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create_vote_for_all_legal_officers",
                      "fields": [
                        {
                          "name": "loc_id",
                          "type": 106,
                          "typeName": "T::LocId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create_vote_for_all_legal_officers`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "vote_id",
                          "type": 10,
                          "typeName": "VoteId"
                        },
                        {
                          "name": "vote_yes",
                          "type": 60,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 175,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_spend",
                      "fields": [
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_spend`]."
                      ]
                    },
                    {
                      "name": "reject_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 69,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::reject_proposal`]."
                      ]
                    },
                    {
                      "name": "approve_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 69,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_proposal`]."
                      ]
                    },
                    {
                      "name": "spend_local",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::spend_local`]."
                      ]
                    },
                    {
                      "name": "remove_approval",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 69,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_approval`]."
                      ]
                    },
                    {
                      "name": "spend",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 42,
                          "typeName": "Box<T::AssetKind>"
                        },
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "AssetBalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "Box<BeneficiaryLookupOf<T, I>>"
                        },
                        {
                          "name": "valid_from",
                          "type": 126,
                          "typeName": "Option<BlockNumberFor<T>>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::spend`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "check_status",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::check_status`]."
                      ]
                    },
                    {
                      "name": "void_spend",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::void_spend`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 176,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_spend",
                      "fields": [
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_spend`]."
                      ]
                    },
                    {
                      "name": "reject_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 69,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::reject_proposal`]."
                      ]
                    },
                    {
                      "name": "approve_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 69,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_proposal`]."
                      ]
                    },
                    {
                      "name": "spend_local",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "BalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 104,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::spend_local`]."
                      ]
                    },
                    {
                      "name": "remove_approval",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 69,
                          "typeName": "ProposalIndex"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_approval`]."
                      ]
                    },
                    {
                      "name": "spend",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 42,
                          "typeName": "Box<T::AssetKind>"
                        },
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "AssetBalanceOf<T, I>"
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "Box<BeneficiaryLookupOf<T, I>>"
                        },
                        {
                          "name": "valid_from",
                          "type": 126,
                          "typeName": "Option<BlockNumberFor<T>>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::spend`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "check_status",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::check_status`]."
                      ]
                    },
                    {
                      "name": "void_spend",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::void_spend`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 177,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 178,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::batch`]."
                      ]
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 87,
                          "typeName": "u16"
                        },
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_derivative`]."
                      ]
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 178,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::batch_all`]."
                      ]
                    },
                    {
                      "name": "dispatch_as",
                      "fields": [
                        {
                          "name": "as_origin",
                          "type": 179,
                          "typeName": "Box<T::PalletsOrigin>"
                        },
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_as`]."
                      ]
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 178,
                          "typeName": "Vec<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_batch`]."
                      ]
                    },
                    {
                      "name": "with_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 144,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::with_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 178,
            "type": {
              "def": {
                "sequence": {
                  "type": 144
                }
              }
            }
          },
          {
            "id": 179,
            "type": {
              "path": [
                "logion_node_runtime",
                "OriginCaller"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "system",
                      "fields": [
                        {
                          "type": 180,
                          "typeName": "frame_system::Origin<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Void",
                      "fields": [
                        {
                          "type": 139,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 180,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "index": 0
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "None",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 181,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequireSudo",
                      "index": 0,
                      "docs": [
                        "Sender must be the Sudo account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the Sudo pallet."
              ]
            }
          },
          {
            "id": 182,
            "type": {
              "def": {
                "tuple": [
                  0,
                  1
                ]
              }
            }
          },
          {
            "id": 183,
            "type": {
              "path": [
                "pallet_multisig",
                "Multisig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "MaxApprovals",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "when",
                      "type": 45,
                      "typeName": "Timepoint<BlockNumber>"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "approvals",
                      "type": 184,
                      "typeName": "BoundedVec<AccountId, MaxApprovals>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 184,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 57,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 185,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MinimumThreshold",
                      "index": 0,
                      "docs": [
                        "Threshold must be 2 or greater."
                      ]
                    },
                    {
                      "name": "AlreadyApproved",
                      "index": 1,
                      "docs": [
                        "Call is already approved by this signatory."
                      ]
                    },
                    {
                      "name": "NoApprovalsNeeded",
                      "index": 2,
                      "docs": [
                        "Call doesn't need any (more) approvals."
                      ]
                    },
                    {
                      "name": "TooFewSignatories",
                      "index": 3,
                      "docs": [
                        "There are too few signatories in the list."
                      ]
                    },
                    {
                      "name": "TooManySignatories",
                      "index": 4,
                      "docs": [
                        "There are too many signatories in the list."
                      ]
                    },
                    {
                      "name": "SignatoriesOutOfOrder",
                      "index": 5,
                      "docs": [
                        "The signatories were provided out of order; they should be ordered."
                      ]
                    },
                    {
                      "name": "SenderInSignatories",
                      "index": 6,
                      "docs": [
                        "The sender was contained in the other signatories; it shouldn't be."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 7,
                      "docs": [
                        "Multisig operation not found when attempting to cancel."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "index": 8,
                      "docs": [
                        "Only the account that originally created the multisig is able to cancel it."
                      ]
                    },
                    {
                      "name": "NoTimepoint",
                      "index": 9,
                      "docs": [
                        "No timepoint was given, yet the multisig operation is already underway."
                      ]
                    },
                    {
                      "name": "WrongTimepoint",
                      "index": 10,
                      "docs": [
                        "A different timepoint was given to the multisig operation that is underway."
                      ]
                    },
                    {
                      "name": "UnexpectedTimepoint",
                      "index": 11,
                      "docs": [
                        "A timepoint was given, yet no multisig operation is underway."
                      ]
                    },
                    {
                      "name": "MaxWeightTooLow",
                      "index": 12,
                      "docs": [
                        "The maximum weight information provided was too low."
                      ]
                    },
                    {
                      "name": "AlreadyStored",
                      "index": 13,
                      "docs": [
                        "The data to be stored is already stored."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 186,
            "type": {
              "path": [
                "pallet_recovery",
                "RecoveryConfig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Friends",
                  "type": 187
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delay_period",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "friends",
                      "type": 187,
                      "typeName": "Friends"
                    },
                    {
                      "name": "threshold",
                      "type": 87,
                      "typeName": "u16"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 187,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 57,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 188,
            "type": {
              "def": {
                "tuple": [
                  0,
                  0
                ]
              }
            }
          },
          {
            "id": 189,
            "type": {
              "path": [
                "pallet_recovery",
                "ActiveRecovery"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Friends",
                  "type": 187
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "created",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "friends",
                      "type": 187,
                      "typeName": "Friends"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 190,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotAllowed",
                      "index": 0,
                      "docs": [
                        "User is not allowed to make a call on behalf of this account"
                      ]
                    },
                    {
                      "name": "ZeroThreshold",
                      "index": 1,
                      "docs": [
                        "Threshold must be greater than zero"
                      ]
                    },
                    {
                      "name": "NotEnoughFriends",
                      "index": 2,
                      "docs": [
                        "Friends list must be greater than zero and threshold"
                      ]
                    },
                    {
                      "name": "MaxFriends",
                      "index": 3,
                      "docs": [
                        "Friends list must be less than max friends"
                      ]
                    },
                    {
                      "name": "NotSorted",
                      "index": 4,
                      "docs": [
                        "Friends list must be sorted and free of duplicates"
                      ]
                    },
                    {
                      "name": "NotRecoverable",
                      "index": 5,
                      "docs": [
                        "This account is not set up for recovery"
                      ]
                    },
                    {
                      "name": "AlreadyRecoverable",
                      "index": 6,
                      "docs": [
                        "This account is already set up for recovery"
                      ]
                    },
                    {
                      "name": "AlreadyStarted",
                      "index": 7,
                      "docs": [
                        "A recovery process has already started for this account"
                      ]
                    },
                    {
                      "name": "NotStarted",
                      "index": 8,
                      "docs": [
                        "A recovery process has not started for this rescuer"
                      ]
                    },
                    {
                      "name": "NotFriend",
                      "index": 9,
                      "docs": [
                        "This account is not a friend who can vouch"
                      ]
                    },
                    {
                      "name": "DelayPeriod",
                      "index": 10,
                      "docs": [
                        "The friend must wait until the delay period to vouch for this recovery"
                      ]
                    },
                    {
                      "name": "AlreadyVouched",
                      "index": 11,
                      "docs": [
                        "This user has already vouched for this recovery"
                      ]
                    },
                    {
                      "name": "Threshold",
                      "index": 12,
                      "docs": [
                        "The threshold for recovering this account has not been met"
                      ]
                    },
                    {
                      "name": "StillActive",
                      "index": 13,
                      "docs": [
                        "There are still active recovery attempts that need to be closed"
                      ]
                    },
                    {
                      "name": "AlreadyProxy",
                      "index": 14,
                      "docs": [
                        "This account is already set up for recovery"
                      ]
                    },
                    {
                      "name": "BadState",
                      "index": 15,
                      "docs": [
                        "Some internal state is broken."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 191,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 153
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 192
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 192,
            "type": {
              "def": {
                "sequence": {
                  "type": 153
                }
              }
            }
          },
          {
            "id": 193,
            "type": {
              "path": [
                "pallet_lo_authority_list",
                "pallet",
                "StorageVersion"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1",
                      "index": 0
                    },
                    {
                      "name": "V2AddOnchainSettings",
                      "index": 1
                    },
                    {
                      "name": "V3GuestLegalOfficers",
                      "index": 2
                    },
                    {
                      "name": "V4Region",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 194,
            "type": {
              "path": [
                "pallet_lo_authority_list",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyExists",
                      "index": 0,
                      "docs": [
                        "The LO is already in the list."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 1,
                      "docs": [
                        "The LO is not in the list."
                      ]
                    },
                    {
                      "name": "PeerIdAlreadyInUse",
                      "index": 2,
                      "docs": [
                        "The Peer ID is already assigned to another LO."
                      ]
                    },
                    {
                      "name": "HostHasGuest",
                      "index": 3,
                      "docs": [
                        "The host has at least one guest and cannot become a guest or be removed"
                      ]
                    },
                    {
                      "name": "GuestOfGuest",
                      "index": 4,
                      "docs": [
                        "Trying to add a guest with another guest as host"
                      ]
                    },
                    {
                      "name": "HostNotFound",
                      "index": 5,
                      "docs": [
                        "Trying to add a guest with unknown host"
                      ]
                    },
                    {
                      "name": "HostCannotConvert",
                      "index": 6,
                      "docs": [
                        "Host cannot convert itself into a guest"
                      ]
                    },
                    {
                      "name": "GuestCannotUpdate",
                      "index": 7,
                      "docs": [
                        "Guest cannot update"
                      ]
                    },
                    {
                      "name": "CannotChangeRegion",
                      "index": 8,
                      "docs": [
                        "LO cannot change region"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 195,
            "type": {
              "path": [
                "pallet_logion_loc",
                "LegalOfficerCase"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                },
                {
                  "name": "SponsorshipId",
                  "type": 6
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "requester",
                      "type": 196,
                      "typeName": "Requester<AccountId, LocId, EthereumAddress>"
                    },
                    {
                      "name": "metadata",
                      "type": 197,
                      "typeName": "Vec<MetadataItem<AccountId, EthereumAddress, Hash>>"
                    },
                    {
                      "name": "files",
                      "type": 199,
                      "typeName": "Vec<File<Hash, AccountId, EthereumAddress>>"
                    },
                    {
                      "name": "closed",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "loc_type",
                      "type": 201,
                      "typeName": "LocType"
                    },
                    {
                      "name": "links",
                      "type": 202,
                      "typeName": "Vec<LocLink<LocId, Hash, AccountId, EthereumAddress>>"
                    },
                    {
                      "name": "void_info",
                      "type": 204,
                      "typeName": "Option<LocVoidInfo<LocId>>"
                    },
                    {
                      "name": "replacer_of",
                      "type": 206,
                      "typeName": "Option<LocId>"
                    },
                    {
                      "name": "collection_last_block_submission",
                      "type": 126,
                      "typeName": "Option<BlockNumber>"
                    },
                    {
                      "name": "collection_max_size",
                      "type": 126,
                      "typeName": "Option<CollectionSize>"
                    },
                    {
                      "name": "collection_can_upload",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "seal",
                      "type": 171,
                      "typeName": "Option<Hash>"
                    },
                    {
                      "name": "sponsorship_id",
                      "type": 206,
                      "typeName": "Option<SponsorshipId>"
                    },
                    {
                      "name": "value_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "legal_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "collection_item_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "tokens_record_fee",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "pallet_logion_loc",
                "Requester"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Account",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Loc",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "LocId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "OtherAccount",
                      "fields": [
                        {
                          "type": 52,
                          "typeName": "OtherAccountId<EthereumAddress>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 197,
            "type": {
              "def": {
                "sequence": {
                  "type": 198
                }
              }
            }
          },
          {
            "id": 198,
            "type": {
              "path": [
                "pallet_logion_loc",
                "MetadataItem"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                },
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "value",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "submitter",
                      "type": 49,
                      "typeName": "SupportedAccountId<AccountId, EthereumAddress>"
                    },
                    {
                      "name": "acknowledged_by_owner",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "acknowledged_by_verified_issuer",
                      "type": 60,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 199,
            "type": {
              "def": {
                "sequence": {
                  "type": 200
                }
              }
            }
          },
          {
            "id": 200,
            "type": {
              "path": [
                "pallet_logion_loc",
                "File"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "hash",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "nature",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "submitter",
                      "type": 49,
                      "typeName": "SupportedAccountId<AccountId, EthereumAddress>"
                    },
                    {
                      "name": "size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "acknowledged_by_owner",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "acknowledged_by_verified_issuer",
                      "type": 60,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 201,
            "type": {
              "path": [
                "pallet_logion_loc",
                "LocType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Transaction",
                      "index": 0
                    },
                    {
                      "name": "Identity",
                      "index": 1
                    },
                    {
                      "name": "Collection",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 202,
            "type": {
              "def": {
                "sequence": {
                  "type": 203
                }
              }
            }
          },
          {
            "id": 203,
            "type": {
              "path": [
                "pallet_logion_loc",
                "LocLink"
              ],
              "params": [
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 6,
                      "typeName": "LocId"
                    },
                    {
                      "name": "nature",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "submitter",
                      "type": 49,
                      "typeName": "SupportedAccountId<AccountId, EthereumAddress>"
                    },
                    {
                      "name": "acknowledged_by_owner",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "acknowledged_by_verified_issuer",
                      "type": 60,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 204,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 205
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 205
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "pallet_logion_loc",
                "LocVoidInfo"
              ],
              "params": [
                {
                  "name": "LocId",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "replacer",
                      "type": 206,
                      "typeName": "Option<LocId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 206,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 6
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 207,
            "type": {
              "def": {
                "sequence": {
                  "type": 6
                }
              }
            }
          },
          {
            "id": 208,
            "type": {
              "def": {
                "tuple": [
                  6,
                  12
                ]
              }
            }
          },
          {
            "id": 209,
            "type": {
              "path": [
                "pallet_logion_loc",
                "CollectionItem"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "TokenIssuance",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "description",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "files",
                      "type": 163,
                      "typeName": "Vec<CollectionItemFile<Hash>>"
                    },
                    {
                      "name": "token",
                      "type": 165,
                      "typeName": "Option<CollectionItemToken<TokenIssuance, Hash>>"
                    },
                    {
                      "name": "restricted_delivery",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "terms_and_conditions",
                      "type": 167,
                      "typeName": "Vec<TermsAndConditionsElement<LocId, Hash>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 210,
            "type": {
              "path": [
                "pallet_logion_loc",
                "TokensRecord"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "BoundedTokensRecordFilesList",
                  "type": 211
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "description",
                      "type": 12,
                      "typeName": "Hash"
                    },
                    {
                      "name": "files",
                      "type": 211,
                      "typeName": "BoundedTokensRecordFilesList"
                    },
                    {
                      "name": "submitter",
                      "type": 0,
                      "typeName": "AccountId"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 211,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 170
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 169,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 212,
            "type": {
              "path": [
                "pallet_logion_loc",
                "VerifiedIssuer"
              ],
              "params": [
                {
                  "name": "LocId",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "identity_loc",
                      "type": 6,
                      "typeName": "LocId"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 213,
            "type": {
              "def": {
                "tuple": [
                  6,
                  0
                ]
              }
            }
          },
          {
            "id": 214,
            "type": {
              "def": {
                "tuple": [
                  0,
                  0,
                  6
                ]
              }
            }
          },
          {
            "id": 215,
            "type": {
              "path": [
                "pallet_logion_loc",
                "Sponsorship"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "EthereumAddress",
                  "type": 50
                },
                {
                  "name": "LocId",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sponsor",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "sponsored_account",
                      "type": 49,
                      "typeName": "SupportedAccountId<AccountId, EthereumAddress>"
                    },
                    {
                      "name": "legal_officer",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "loc_id",
                      "type": 206,
                      "typeName": "Option<LocId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 216,
            "type": {
              "path": [
                "pallet_logion_loc",
                "pallet",
                "StorageVersion"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1",
                      "index": 0
                    },
                    {
                      "name": "V2MakeLocVoid",
                      "index": 1
                    },
                    {
                      "name": "V3RequesterEnum",
                      "index": 2
                    },
                    {
                      "name": "V4ItemSubmitter",
                      "index": 3
                    },
                    {
                      "name": "V5Collection",
                      "index": 4
                    },
                    {
                      "name": "V6ItemUpload",
                      "index": 5
                    },
                    {
                      "name": "V7ItemToken",
                      "index": 6
                    },
                    {
                      "name": "V8AddSeal",
                      "index": 7
                    },
                    {
                      "name": "V9TermsAndConditions",
                      "index": 8
                    },
                    {
                      "name": "V10AddLocFileSize",
                      "index": 9
                    },
                    {
                      "name": "V11EnableEthereumSubmitter",
                      "index": 10
                    },
                    {
                      "name": "V12Sponsorship",
                      "index": 11
                    },
                    {
                      "name": "V13AcknowledgeItems",
                      "index": 12
                    },
                    {
                      "name": "V14HashLocPublicData",
                      "index": 13
                    },
                    {
                      "name": "V15AddTokenIssuance",
                      "index": 14
                    },
                    {
                      "name": "V16MoveTokenIssuance",
                      "index": 15
                    },
                    {
                      "name": "V17HashItemRecordPublicData",
                      "index": 16
                    },
                    {
                      "name": "V18AddValueFee",
                      "index": 17
                    },
                    {
                      "name": "V19AcknowledgeItemsByIssuer",
                      "index": 18
                    },
                    {
                      "name": "V20AddCustomLegalFee",
                      "index": 19
                    },
                    {
                      "name": "V21EnableRequesterLinks",
                      "index": 20
                    },
                    {
                      "name": "V22AddRecurrentFees",
                      "index": 21
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 217,
            "type": {
              "path": [
                "pallet_logion_loc",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyExists",
                      "index": 0,
                      "docs": [
                        "The LOC ID has already been used."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "index": 1,
                      "docs": [
                        "Target LOC does not exist"
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "index": 2,
                      "docs": [
                        "Unauthorized LOC operation"
                      ]
                    },
                    {
                      "name": "CannotMutate",
                      "index": 3,
                      "docs": [
                        "Occurs when trying to mutate a closed LOC"
                      ]
                    },
                    {
                      "name": "AlreadyClosed",
                      "index": 4,
                      "docs": [
                        "Occurs when trying to close an already closed LOC"
                      ]
                    },
                    {
                      "name": "LinkedLocNotFound",
                      "index": 5,
                      "docs": [
                        "Occurs when trying to link to a non-existent LOC"
                      ]
                    },
                    {
                      "name": "ReplacerLocNotFound",
                      "index": 6,
                      "docs": [
                        "Occurs when trying to replace void LOC with a non-existent LOC"
                      ]
                    },
                    {
                      "name": "AlreadyVoid",
                      "index": 7,
                      "docs": [
                        "Occurs when trying to void a LOC already void"
                      ]
                    },
                    {
                      "name": "ReplacerLocAlreadyVoid",
                      "index": 8,
                      "docs": [
                        "Occurs when trying to void a LOC by replacing it with an already void LOC"
                      ]
                    },
                    {
                      "name": "ReplacerLocAlreadyReplacing",
                      "index": 9,
                      "docs": [
                        "Occurs when trying to void a LOC by replacing it with a LOC already replacing another LOC"
                      ]
                    },
                    {
                      "name": "CannotMutateVoid",
                      "index": 10,
                      "docs": [
                        "Occurs when trying to mutate a void LOC"
                      ]
                    },
                    {
                      "name": "UnexpectedRequester",
                      "index": 11,
                      "docs": [
                        "Unexpected requester given LOC type"
                      ]
                    },
                    {
                      "name": "ReplacerLocWrongType",
                      "index": 12,
                      "docs": [
                        "Occurs when trying to void a LOC by replacing it with a LOC of a different type"
                      ]
                    },
                    {
                      "name": "InvalidSubmitter",
                      "index": 13,
                      "docs": [
                        "Submitter is not consistent with caller"
                      ]
                    },
                    {
                      "name": "CollectionHasNoLimit",
                      "index": 14,
                      "docs": [
                        "A collection LOC must be limited in time and/or quantity of items"
                      ]
                    },
                    {
                      "name": "WrongCollectionLoc",
                      "index": 15,
                      "docs": [
                        "Item cannot be added to given collection, it may be missing or limits are reached"
                      ]
                    },
                    {
                      "name": "CollectionItemAlreadyExists",
                      "index": 16,
                      "docs": [
                        "An item with same identifier already exists in the collection"
                      ]
                    },
                    {
                      "name": "CollectionItemTooMuchData",
                      "index": 17,
                      "docs": [
                        "Collection Item cannot be added to given collection because some fields contain too many bytes"
                      ]
                    },
                    {
                      "name": "CollectionLimitsReached",
                      "index": 18,
                      "docs": [
                        "The collection limits have been reached"
                      ]
                    },
                    {
                      "name": "MetadataItemInvalid",
                      "index": 19,
                      "docs": [
                        "Metadata Item cannot be added to given LOC because submitted data are invalid"
                      ]
                    },
                    {
                      "name": "FileInvalid",
                      "index": 20,
                      "docs": [
                        "File cannot be added to given LOC because submitted data are invalid"
                      ]
                    },
                    {
                      "name": "LocLinkInvalid",
                      "index": 21,
                      "docs": [
                        "Link cannot be added to given LOC because submitted data are invalid"
                      ]
                    },
                    {
                      "name": "CannotUpload",
                      "index": 22,
                      "docs": [
                        "Cannot attach files to this item because the Collection LOC does not allow it"
                      ]
                    },
                    {
                      "name": "MustUpload",
                      "index": 23,
                      "docs": [
                        "Must attach at least one file"
                      ]
                    },
                    {
                      "name": "DuplicateFile",
                      "index": 24,
                      "docs": [
                        "Cannot attach same file multiple times"
                      ]
                    },
                    {
                      "name": "MissingToken",
                      "index": 25,
                      "docs": [
                        "Collection items with restricted delivery require an underlying token to be defined"
                      ]
                    },
                    {
                      "name": "MissingFiles",
                      "index": 26,
                      "docs": [
                        "Collection items with restricted delivery require at least one associated file"
                      ]
                    },
                    {
                      "name": "TermsAndConditionsLocNotFound",
                      "index": 27,
                      "docs": [
                        "TermsAndConditions LOC does not exist"
                      ]
                    },
                    {
                      "name": "TermsAndConditionsLocNotClosed",
                      "index": 28,
                      "docs": [
                        "TermsAndConditions LOC not closed"
                      ]
                    },
                    {
                      "name": "TermsAndConditionsLocVoid",
                      "index": 29,
                      "docs": [
                        "TermsAndConditions LOC is void"
                      ]
                    },
                    {
                      "name": "DuplicateLocFile",
                      "index": 30,
                      "docs": [
                        "Cannot add several files with same hash to LOC"
                      ]
                    },
                    {
                      "name": "DuplicateLocMetadata",
                      "index": 31,
                      "docs": [
                        "Cannot add several metadata items with same name to LOC"
                      ]
                    },
                    {
                      "name": "DuplicateLocLink",
                      "index": 32,
                      "docs": [
                        "Cannot add several links with same target to LOC"
                      ]
                    },
                    {
                      "name": "TokensRecordTooMuchData",
                      "index": 33,
                      "docs": [
                        "Token Record cannot be added because some fields contain too many bytes"
                      ]
                    },
                    {
                      "name": "TokensRecordAlreadyExists",
                      "index": 34,
                      "docs": [
                        "A token record with the same identifier already exists"
                      ]
                    },
                    {
                      "name": "CannotAddRecord",
                      "index": 35,
                      "docs": [
                        "The token record cannot be added because either the collection is in a wrong state",
                        "or the submitter is not an issuer or the requester"
                      ]
                    },
                    {
                      "name": "InvalidIdentityLoc",
                      "index": 36,
                      "docs": [
                        "Given identity LOC does not exist or is invalid"
                      ]
                    },
                    {
                      "name": "AlreadyNominated",
                      "index": 37,
                      "docs": [
                        "Issuer has already been nominated by the owner"
                      ]
                    },
                    {
                      "name": "NotNominated",
                      "index": 38,
                      "docs": [
                        "Issuer is not nominated by the owner"
                      ]
                    },
                    {
                      "name": "CannotSubmit",
                      "index": 39,
                      "docs": [
                        "The submitter of added item cannot contribute to this LOC"
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "index": 40,
                      "docs": [
                        "The requester has not enough funds to import file"
                      ]
                    },
                    {
                      "name": "AlreadyUsed",
                      "index": 41,
                      "docs": [
                        "The sponsorship to be withdrawn has already been used"
                      ]
                    },
                    {
                      "name": "CannotLinkToSponsorship",
                      "index": 42,
                      "docs": [
                        "The sponsorship cannot be used for creating the new LOC"
                      ]
                    },
                    {
                      "name": "ItemNotFound",
                      "index": 43,
                      "docs": [
                        "Target Item (Metadata or File) could not be found in LOC"
                      ]
                    },
                    {
                      "name": "ItemAlreadyAcknowledged",
                      "index": 44,
                      "docs": [
                        "Target Item (Metadata or File) is already acknowledged"
                      ]
                    },
                    {
                      "name": "CannotCloseUnacknowledgedByOwner",
                      "index": 45,
                      "docs": [
                        "There is still at least one Item (Metadata, Link or File) unacknowledged by LOC owner"
                      ]
                    },
                    {
                      "name": "BadTokenIssuance",
                      "index": 46,
                      "docs": [
                        "Invalid token issuance"
                      ]
                    },
                    {
                      "name": "CannotCloseUnacknowledgedByVerifiedIssuer",
                      "index": 47,
                      "docs": [
                        "There is still at least one Item (Metadata, Link or File) unacknowledged by verified issuer"
                      ]
                    },
                    {
                      "name": "AccountNotIdentified",
                      "index": 48,
                      "docs": [
                        "The provided Polkadot account has no closed, non-void identity LOC"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 218,
            "type": {
              "path": [
                "pallet_verified_recovery",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidLegalOfficers",
                      "index": 0,
                      "docs": [
                        "The set of legal officers is invalid (size <> from 2)."
                      ]
                    },
                    {
                      "name": "MissingIdentityLoc",
                      "index": 1,
                      "docs": [
                        "One or both legal officers in the friends list did not yet close an Identity LOC for the account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 219,
            "type": {
              "path": [
                "pallet_logion_vault",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSignatories",
                      "index": 0,
                      "docs": [
                        "The set of signatories is invalid (size <> from 2 or does not contain only legal officers on transfer creation)."
                      ]
                    },
                    {
                      "name": "WrongInitiator",
                      "index": 1,
                      "docs": [
                        "The transfer initiator is a legal officer."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 220,
            "type": {
              "path": [
                "pallet_logion_vote",
                "Vote"
              ],
              "params": [
                {
                  "name": "LocId",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "loc_id",
                      "type": 6,
                      "typeName": "LocId"
                    },
                    {
                      "name": "ballots",
                      "type": 221,
                      "typeName": "Vec<Ballot<AccountId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 221,
            "type": {
              "def": {
                "sequence": {
                  "type": 58
                }
              }
            }
          },
          {
            "id": 222,
            "type": {
              "path": [
                "pallet_logion_vote",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidLoc",
                      "index": 0,
                      "docs": [
                        "Given LOC is not valid (not found, or not closed or void) or does not belong to vote requester."
                      ]
                    },
                    {
                      "name": "VoteNotFound",
                      "index": 1,
                      "docs": [
                        "Given vote does not exist."
                      ]
                    },
                    {
                      "name": "NotAllowed",
                      "index": 2,
                      "docs": [
                        "User is not allowed to vote on given vote."
                      ]
                    },
                    {
                      "name": "AlreadyVoted",
                      "index": 3,
                      "docs": [
                        "User has already voted on given vote."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 223,
            "type": {
              "path": [
                "pallet_treasury",
                "Proposal"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposer",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "AccountId"
                    },
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 224,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 115,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 225,
            "type": {
              "path": [
                "pallet_treasury",
                "SpendStatus"
              ],
              "params": [
                {
                  "name": "AssetKind",
                  "type": 42
                },
                {
                  "name": "AssetBalance",
                  "type": 6
                },
                {
                  "name": "Beneficiary",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PaymentId",
                  "type": 42
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset_kind",
                      "type": 42,
                      "typeName": "AssetKind"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "AssetBalance"
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "Beneficiary"
                    },
                    {
                      "name": "valid_from",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "expire_at",
                      "type": 4,
                      "typeName": "BlockNumber"
                    },
                    {
                      "name": "status",
                      "type": 226,
                      "typeName": "PaymentState<PaymentId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 226,
            "type": {
              "path": [
                "pallet_treasury",
                "PaymentState"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 42
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "index": 0
                    },
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 42,
                          "typeName": "Id"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Failed",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 227,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 228,
            "type": {
              "path": [
                "frame_support",
                "PalletId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 86,
                      "typeName": "[u8; 8]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 229,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "index": 1,
                      "docs": [
                        "No proposal, bounty or spend at that index."
                      ]
                    },
                    {
                      "name": "TooManyApprovals",
                      "index": 2,
                      "docs": [
                        "Too many approvals in the queue."
                      ]
                    },
                    {
                      "name": "InsufficientPermission",
                      "index": 3,
                      "docs": [
                        "The spend origin is valid but the amount it is allowed to spend is lower than the",
                        "amount to be spent."
                      ]
                    },
                    {
                      "name": "ProposalNotApproved",
                      "index": 4,
                      "docs": [
                        "Proposal has not been approved."
                      ]
                    },
                    {
                      "name": "FailedToConvertBalance",
                      "index": 5,
                      "docs": [
                        "The balance of the asset kind is not convertible to the balance of the native asset."
                      ]
                    },
                    {
                      "name": "SpendExpired",
                      "index": 6,
                      "docs": [
                        "The spend has expired and cannot be claimed."
                      ]
                    },
                    {
                      "name": "EarlyPayout",
                      "index": 7,
                      "docs": [
                        "The spend is not yet eligible for payout."
                      ]
                    },
                    {
                      "name": "AlreadyAttempted",
                      "index": 8,
                      "docs": [
                        "The payment has already been attempted."
                      ]
                    },
                    {
                      "name": "PayoutError",
                      "index": 9,
                      "docs": [
                        "There was some issue with the mechanism of payment."
                      ]
                    },
                    {
                      "name": "NotAttempted",
                      "index": 10,
                      "docs": [
                        "The payout was not yet attempted/claimed."
                      ]
                    },
                    {
                      "name": "Inconclusive",
                      "index": 11,
                      "docs": [
                        "The payment has neither failed nor succeeded yet."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the treasury pallet."
              ]
            }
          },
          {
            "id": 230,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "index": 1,
                      "docs": [
                        "No proposal, bounty or spend at that index."
                      ]
                    },
                    {
                      "name": "TooManyApprovals",
                      "index": 2,
                      "docs": [
                        "Too many approvals in the queue."
                      ]
                    },
                    {
                      "name": "InsufficientPermission",
                      "index": 3,
                      "docs": [
                        "The spend origin is valid but the amount it is allowed to spend is lower than the",
                        "amount to be spent."
                      ]
                    },
                    {
                      "name": "ProposalNotApproved",
                      "index": 4,
                      "docs": [
                        "Proposal has not been approved."
                      ]
                    },
                    {
                      "name": "FailedToConvertBalance",
                      "index": 5,
                      "docs": [
                        "The balance of the asset kind is not convertible to the balance of the native asset."
                      ]
                    },
                    {
                      "name": "SpendExpired",
                      "index": 6,
                      "docs": [
                        "The spend has expired and cannot be claimed."
                      ]
                    },
                    {
                      "name": "EarlyPayout",
                      "index": 7,
                      "docs": [
                        "The spend is not yet eligible for payout."
                      ]
                    },
                    {
                      "name": "AlreadyAttempted",
                      "index": 8,
                      "docs": [
                        "The payment has already been attempted."
                      ]
                    },
                    {
                      "name": "PayoutError",
                      "index": 9,
                      "docs": [
                        "There was some issue with the mechanism of payment."
                      ]
                    },
                    {
                      "name": "NotAttempted",
                      "index": 10,
                      "docs": [
                        "The payout was not yet attempted/claimed."
                      ]
                    },
                    {
                      "name": "Inconclusive",
                      "index": 11,
                      "docs": [
                        "The payment has neither failed nor succeeded yet."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the treasury pallet."
              ]
            }
          },
          {
            "id": 231,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManyCalls",
                      "index": 0,
                      "docs": [
                        "Too many calls batched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 232,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSignature"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "type": 133,
                          "typeName": "ed25519::Signature"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "type": 233,
                          "typeName": "sr25519::Signature"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "type": 234,
                          "typeName": "ecdsa::Signature"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 233,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 134,
                      "typeName": "[u8; 64]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 234,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 235,
                      "typeName": "[u8; SIGNATURE_SERIALIZED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 235,
            "type": {
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 236,
            "type": {
              "def": {
                "tuple": [
                  237,
                  238,
                  239,
                  240,
                  241,
                  243,
                  244,
                  245
                ]
              }
            }
          },
          {
            "id": 237,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 238,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 239,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 240,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 241,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 242,
                      "typeName": "Era"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 242,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "index": 0
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 45
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 47
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 48
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 49
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 52
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 57
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 60
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 61
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 74
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 75
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 76
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 77
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 78
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 79
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 81
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 83
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 84
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 85
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 86
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 87
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 88
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 89
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 92
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 93
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 94
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 95
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 96
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 97
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 98
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 99
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 101
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 102
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 103
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 104
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 105
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 106
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 107
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 108
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 109
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 110
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 111
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 112
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 113
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 114
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 115
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 116
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 117
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 118
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 119
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 120
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 121
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 122
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 123
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 124
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 125
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 126
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 127
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 128
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 129
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 130
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 131
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 132
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 133
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 134
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 135
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 136
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 137
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 138
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 139
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 140
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 141
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 142
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 143
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 144
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 145
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 146
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 147
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 148
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 149
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 150
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 151
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 152
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 153
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 154
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 155
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 156
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 157
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 158
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 159
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 160
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 161
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 162
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 163
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 164
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 165
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 166
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 167
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 168
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 169
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 170
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 171
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 172
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 173
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 174
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 175
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 176
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 177
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 178
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 179
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 180
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 181
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 182
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 183
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 184
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 185
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 186
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 187
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 188
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 189
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 190
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 191
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 192
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 193
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 194
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 195
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 196
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 197
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 198
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 199
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 200
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 201
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 202
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 203
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 204
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 205
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 206
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 207
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 208
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 209
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 210
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 211
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 212
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 213
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 214
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 215
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 216
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 217
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 218
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 219
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 220
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 221
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 222
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 223
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 224
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 225
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 226
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 227
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 228
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 229
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 230
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 231
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 232
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 233
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 234
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 235
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 236
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 237
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 238
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 239
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 240
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 241
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 242
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 243
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 244
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 245
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 246
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 247
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 248
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 249
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 250
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 251
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 252
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 253
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 254
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 255
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 243,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 69,
                      "typeName": "T::Nonce"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 244,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 245,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 106,
                      "typeName": "BalanceOf<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 246,
            "type": {
              "path": [
                "logion_node_runtime",
                "Runtime"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 247,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "block",
                "Block"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 248
                },
                {
                  "name": "Extrinsic",
                  "type": 249
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 248,
                      "typeName": "Header"
                    },
                    {
                      "name": "extrinsics",
                      "type": 250,
                      "typeName": "Vec<Extrinsic>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 248,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "number",
                      "type": 69,
                      "typeName": "Number"
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 12,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "digest",
                      "type": 14,
                      "typeName": "Digest"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 249,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 104
                },
                {
                  "name": "Call",
                  "type": 144
                },
                {
                  "name": "Signature",
                  "type": 232
                },
                {
                  "name": "Extra",
                  "type": 236
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 250,
            "type": {
              "def": {
                "sequence": {
                  "type": 249
                }
              }
            }
          },
          {
            "id": 251,
            "type": {
              "path": [
                "sp_core",
                "OpaqueMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 252,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 251
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 251
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 253,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 41
                },
                {
                  "name": "E",
                  "type": 254
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 41
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 254
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 254,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionValidityError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Invalid",
                      "fields": [
                        {
                          "type": 255,
                          "typeName": "InvalidTransaction"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Unknown",
                      "fields": [
                        {
                          "type": 256,
                          "typeName": "UnknownTransaction"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 255,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "InvalidTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "index": 0
                    },
                    {
                      "name": "Payment",
                      "index": 1
                    },
                    {
                      "name": "Future",
                      "index": 2
                    },
                    {
                      "name": "Stale",
                      "index": 3
                    },
                    {
                      "name": "BadProof",
                      "index": 4
                    },
                    {
                      "name": "AncientBirthBlock",
                      "index": 5
                    },
                    {
                      "name": "ExhaustsResources",
                      "index": 6
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "BadMandatory",
                      "index": 8
                    },
                    {
                      "name": "MandatoryValidation",
                      "index": 9
                    },
                    {
                      "name": "BadSigner",
                      "index": 10
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 256,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "UnknownTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CannotLookup",
                      "index": 0
                    },
                    {
                      "name": "NoUnsignedValidator",
                      "index": 1
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 257,
            "type": {
              "path": [
                "sp_inherents",
                "InherentData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "data",
                      "type": 258,
                      "typeName": "BTreeMap<InherentIdentifier, Vec<u8>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 258,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 86
                },
                {
                  "name": "V",
                  "type": 13
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 259
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 259,
            "type": {
              "def": {
                "sequence": {
                  "type": 260
                }
              }
            }
          },
          {
            "id": 260,
            "type": {
              "def": {
                "tuple": [
                  86,
                  13
                ]
              }
            }
          },
          {
            "id": 261,
            "type": {
              "path": [
                "sp_inherents",
                "CheckInherentsResult"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "okay",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "fatal_error",
                      "type": 60,
                      "typeName": "bool"
                    },
                    {
                      "name": "errors",
                      "type": 257,
                      "typeName": "InherentData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 262,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionSource"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InBlock",
                      "index": 0
                    },
                    {
                      "name": "Local",
                      "index": 1
                    },
                    {
                      "name": "External",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 263,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 264
                },
                {
                  "name": "E",
                  "type": 254
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 264
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 254
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 264,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "ValidTransaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "priority",
                      "type": 11,
                      "typeName": "TransactionPriority"
                    },
                    {
                      "name": "requires",
                      "type": 74,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "provides",
                      "type": 74,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "longevity",
                      "type": 11,
                      "typeName": "TransactionLongevity"
                    },
                    {
                      "name": "propagate",
                      "type": 60,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 265,
            "type": {
              "path": [
                "sp_consensus_slots",
                "SlotDuration"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 266,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 267
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 267
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 267,
            "type": {
              "def": {
                "sequence": {
                  "type": 268
                }
              }
            }
          },
          {
            "id": 268,
            "type": {
              "def": {
                "tuple": [
                  13,
                  117
                ]
              }
            }
          },
          {
            "id": 269,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "OpaqueKeyOwnershipProof"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 13,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 270,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 42
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 42
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 271,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 269
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 269
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 272,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "RuntimeDispatchInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Weight",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 23,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "partial_fee",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 273,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "FeeDetails"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "inclusion_fee",
                      "type": 274,
                      "typeName": "Option<InclusionFee<Balance>>"
                    },
                    {
                      "name": "tip",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 274,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 275
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 275
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 275,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "InclusionFee"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "len_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "adjusted_weight_fee",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 276,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 42
                },
                {
                  "name": "E",
                  "type": 70
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 42
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 70
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 277,
            "type": {
              "path": [
                "logion_node_runtime",
                "RuntimeError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 88,
                          "typeName": "frame_system::Error<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 107,
                          "typeName": "pallet_balances::Error<Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ValidatorSet",
                      "fields": [
                        {
                          "type": 109,
                          "typeName": "pallet_validator_set::Error<Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 119,
                          "typeName": "pallet_session::Error<Runtime>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "type": 140,
                          "typeName": "pallet_grandpa::Error<Runtime>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 181,
                          "typeName": "pallet_sudo::Error<Runtime>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "type": 185,
                          "typeName": "pallet_multisig::Error<Runtime>"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Recovery",
                      "fields": [
                        {
                          "type": 190,
                          "typeName": "pallet_recovery::Error<Runtime>"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "LoAuthorityList",
                      "fields": [
                        {
                          "type": 194,
                          "typeName": "pallet_lo_authority_list::Error<Runtime>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "LogionLoc",
                      "fields": [
                        {
                          "type": 217,
                          "typeName": "pallet_logion_loc::Error<Runtime>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "VerifiedRecovery",
                      "fields": [
                        {
                          "type": 218,
                          "typeName": "pallet_verified_recovery::Error<Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Vault",
                      "fields": [
                        {
                          "type": 219,
                          "typeName": "pallet_logion_vault::Error<Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Vote",
                      "fields": [
                        {
                          "type": 222,
                          "typeName": "pallet_logion_vote::Error<Runtime>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "LogionTreasury",
                      "fields": [
                        {
                          "type": 229,
                          "typeName": "pallet_treasury::Error<Runtime, pallet_treasury::Instance1>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "CommunityTreasury",
                      "fields": [
                        {
                          "type": 230,
                          "typeName": "pallet_treasury::Error<Runtime, pallet_treasury::Instance2>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 231,
                          "typeName": "pallet_utility::Error<Runtime>"
                        }
                      ],
                      "index": 23
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "entries": [
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "ty": {
                  "Plain": 8
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 13
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "ty": {
                  "Plain": 12
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "ty": {
                  "Plain": 14
                },
                "default": [
                  0
                ],
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "ty": {
                  "Plain": 18
                },
                "default": [
                  0
                ],
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 66
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 68
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 60
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 60
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "ty": {
                  "Plain": 64
                },
                "default": [
                  0
                ],
                "docs": [
                  " The execution phase of the block."
                ]
              }
            ]
          },
          "calls": {
            "ty": 71
          },
          "event": {
            "ty": 21
          },
          "constants": [
            {
              "name": "BlockWeights",
              "ty": 75,
              "value": [
                2,
                91,
                31,
                93,
                0,
                11,
                0,
                32,
                74,
                169,
                209,
                1,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                194,
                160,
                169,
                29,
                0,
                1,
                11,
                208,
                95,
                159,
                166,
                46,
                1,
                19,
                102,
                102,
                102,
                102,
                102,
                102,
                102,
                166,
                1,
                11,
                0,
                152,
                247,
                62,
                93,
                1,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                191,
                1,
                0,
                0,
                194,
                160,
                169,
                29,
                0,
                1,
                11,
                208,
                231,
                241,
                16,
                163,
                1,
                19,
                102,
                102,
                102,
                102,
                102,
                102,
                102,
                230,
                1,
                11,
                0,
                32,
                74,
                169,
                209,
                1,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                1,
                7,
                0,
                136,
                82,
                106,
                116,
                19,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                64,
                194,
                160,
                169,
                29,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "ty": 79,
              "value": [
                0,
                0,
                60,
                0,
                0,
                0,
                80,
                0,
                0,
                0,
                80,
                0
              ],
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "ty": 4,
              "value": [
                96,
                9,
                0,
                0
              ],
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "ty": 81,
              "value": [
                64,
                120,
                125,
                1,
                0,
                0,
                0,
                0,
                0,
                225,
                245,
                5,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "ty": 82,
              "value": [
                24,
                108,
                111,
                103,
                105,
                111,
                110,
                24,
                108,
                111,
                103,
                105,
                111,
                110,
                1,
                0,
                0,
                0,
                161,
                0,
                0,
                0,
                2,
                0,
                0,
                0,
                48,
                223,
                106,
                203,
                104,
                153,
                7,
                96,
                155,
                4,
                0,
                0,
                0,
                55,
                227,
                151,
                252,
                124,
                145,
                245,
                228,
                2,
                0,
                0,
                0,
                64,
                254,
                58,
                212,
                1,
                248,
                149,
                154,
                6,
                0,
                0,
                0,
                210,
                188,
                152,
                151,
                238,
                208,
                143,
                21,
                3,
                0,
                0,
                0,
                247,
                139,
                39,
                139,
                229,
                63,
                69,
                76,
                2,
                0,
                0,
                0,
                221,
                113,
                141,
                92,
                197,
                50,
                98,
                212,
                1,
                0,
                0,
                0,
                171,
                60,
                5,
                114,
                41,
                31,
                235,
                139,
                1,
                0,
                0,
                0,
                237,
                153,
                197,
                172,
                178,
                94,
                237,
                245,
                3,
                0,
                0,
                0,
                188,
                157,
                137,
                144,
                79,
                91,
                146,
                63,
                1,
                0,
                0,
                0,
                55,
                200,
                187,
                19,
                80,
                169,
                162,
                168,
                4,
                0,
                0,
                0,
                127,
                240,
                89,
                235,
                239,
                204,
                213,
                60,
                1,
                0,
                0,
                0,
                251,
                197,
                119,
                185,
                215,
                71,
                239,
                214,
                1,
                0,
                0,
                0,
                5,
                0,
                0,
                0,
                1
              ],
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "ty": 87,
              "value": [
                42,
                0
              ],
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "error": {
            "ty": 88
          },
          "index": 0,
          "docs": []
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "entries": [
              {
                "name": "Now",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "ty": {
                  "Plain": 60
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether the timestamp has been updated in this block.",
                  "",
                  " This value is updated to `true` upon successful submission of a timestamp by a node.",
                  " It is then checked at the end of each block execution in the `on_finalize` hook."
                ]
              }
            ]
          },
          "calls": {
            "ty": 89
          },
          "event": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "ty": 11,
              "value": [
                184,
                11,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum period between blocks.",
                "",
                " Be aware that this is different to the *expected* period that the block production",
                " apparatus provides. Your chosen consensus system will generally work with this to",
                " determine a sensible block time. For example, in the Aura pallet it will be double this",
                " period on default settings."
              ]
            }
          ],
          "error": null,
          "index": 2,
          "docs": []
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "entries": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units issued in the system."
                ]
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units of outstanding deactivated balance in the system."
                ]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 90
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 94
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Named reserves on some account balances."
                ]
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 97
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Holds on account balances."
                ]
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 100
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Freeze locks on account balances."
                ]
              }
            ]
          },
          "calls": {
            "ty": 103
          },
          "event": {
            "ty": 30
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "ty": 6,
              "value": [
                244,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ]
            },
            {
              "name": "MaxLocks",
              "ty": 4,
              "value": [
                50,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            },
            {
              "name": "MaxHolds",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of holds that can exist on an account at any time."
              ]
            },
            {
              "name": "MaxFreezes",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of individual freeze locks that can exist on an account at any time."
              ]
            }
          ],
          "error": {
            "ty": 107
          },
          "index": 3,
          "docs": []
        },
        {
          "name": "ValidatorSet",
          "storage": {
            "prefix": "ValidatorSet",
            "entries": [
              {
                "name": "Validators",
                "modifier": "Default",
                "ty": {
                  "Plain": 57
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "OfflineValidators",
                "modifier": "Default",
                "ty": {
                  "Plain": 57
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": {
            "ty": 108
          },
          "event": {
            "ty": 32
          },
          "constants": [],
          "error": {
            "ty": 109
          },
          "index": 4,
          "docs": []
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "entries": [
              {
                "name": "Validators",
                "modifier": "Default",
                "ty": {
                  "Plain": 57
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "ty": {
                  "Plain": 60
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "ty": {
                  "Plain": 110
                },
                "default": [
                  0
                ],
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "ty": {
                  "Plain": 115
                },
                "default": [
                  0
                ],
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 112
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 116,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "ty": 118
          },
          "event": {
            "ty": 33
          },
          "constants": [],
          "error": {
            "ty": 119
          },
          "index": 5,
          "docs": []
        },
        {
          "name": "Aura",
          "storage": {
            "prefix": "Aura",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 120
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current authority set."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "ty": {
                  "Plain": 122
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current slot of this block.",
                  "",
                  " This will be set in `on_initialize`."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 6,
          "docs": []
        },
        {
          "name": "Grandpa",
          "storage": {
            "prefix": "Grandpa",
            "entries": [
              {
                "name": "State",
                "modifier": "Default",
                "ty": {
                  "Plain": 123
                },
                "default": [
                  0
                ],
                "docs": [
                  " State of the current authority set."
                ]
              },
              {
                "name": "PendingChange",
                "modifier": "Optional",
                "ty": {
                  "Plain": 124
                },
                "default": [
                  0
                ],
                "docs": [
                  " Pending change: (signaled at, scheduled change)."
                ]
              },
              {
                "name": "NextForced",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " next block number where we can force a change."
                ]
              },
              {
                "name": "Stalled",
                "modifier": "Optional",
                "ty": {
                  "Plain": 67
                },
                "default": [
                  0
                ],
                "docs": [
                  " `true` if we are currently stalled."
                ]
              },
              {
                "name": "CurrentSetId",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of changes (both in terms of keys and underlying economic responsibilities)",
                  " in the \"set\" of Grandpa validators from genesis."
                ]
              },
              {
                "name": "SetIdSession",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from grandpa set ID to the index of the *most recent* session for which its",
                  " members were responsible.",
                  "",
                  " This is only used for validating equivocation proofs. An equivocation proof must",
                  " contains a key-ownership proof for a given session, therefore we need a way to tie",
                  " together sessions and GRANDPA set ids, i.e. we need to validate that a validator",
                  " was the owner of a given key on a given session, and what the active set ID was",
                  " during that session.",
                  "",
                  " TWOX-NOTE: `SetId` is not under user control."
                ]
              },
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 125
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current list of authorities."
                ]
              }
            ]
          },
          "calls": {
            "ty": 127
          },
          "event": {
            "ty": 34
          },
          "constants": [
            {
              "name": "MaxAuthorities",
              "ty": 4,
              "value": [
                32,
                0,
                0,
                0
              ],
              "docs": [
                " Max Authorities in use"
              ]
            },
            {
              "name": "MaxNominators",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of nominators for each validator."
              ]
            },
            {
              "name": "MaxSetIdSessionEntries",
              "ty": 11,
              "value": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of entries to keep in the set id to session index mapping.",
                "",
                " Since the `SetIdSession` map is only used for validating equivocations this",
                " value should relate to the bonding duration of whatever staking system is",
                " being used (if any). If equivocation handling is not enabled then this value",
                " can be zero."
              ]
            }
          ],
          "error": {
            "ty": 140
          },
          "index": 7,
          "docs": []
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "entries": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 141
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 142
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": null,
          "event": {
            "ty": 39
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "ty": 2,
              "value": [
                5
              ],
              "docs": [
                " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "error": null,
          "index": 8,
          "docs": []
        },
        {
          "name": "Sudo",
          "storage": {
            "prefix": "Sudo",
            "entries": [
              {
                "name": "Key",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " The `AccountId` of the sudo key."
                ]
              }
            ]
          },
          "calls": {
            "ty": 143
          },
          "event": {
            "ty": 40
          },
          "constants": [],
          "error": {
            "ty": 181
          },
          "index": 9,
          "docs": []
        },
        {
          "name": "Multisig",
          "storage": {
            "prefix": "Multisig",
            "entries": [
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 182,
                    "value": 183
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The set of open multisig operations."
                ]
              }
            ]
          },
          "calls": {
            "ty": 145
          },
          "event": {
            "ty": 44
          },
          "constants": [
            {
              "name": "DepositBase",
              "ty": 6,
              "value": [
                244,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating a multisig execution or to",
                " store a dispatch call for later.",
                "",
                " This is held for an additional storage item whose value size is",
                " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                " `32 + sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "DepositFactor",
              "ty": 6,
              "value": [
                100,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per unit threshold when creating a multisig execution.",
                "",
                " This is held for adding 32 bytes more into a pre-existing storage value."
              ]
            },
            {
              "name": "MaxSignatories",
              "ty": 4,
              "value": [
                20,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of signatories allowed in the multisig."
              ]
            }
          ],
          "error": {
            "ty": 185
          },
          "index": 11,
          "docs": []
        },
        {
          "name": "Recovery",
          "storage": {
            "prefix": "Recovery",
            "entries": [
              {
                "name": "Recoverable",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 186
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The set of recoverable accounts and their recovery configuration."
                ]
              },
              {
                "name": "ActiveRecoveries",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 188,
                    "value": 189
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Active recovery attempts.",
                  "",
                  " First account is the account to be recovered, and the second account",
                  " is the user trying to recover the account."
                ]
              },
              {
                "name": "Proxy",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The list of allowed proxy accounts.",
                  "",
                  " Map from the user who can access it to the recovered account."
                ]
              }
            ]
          },
          "calls": {
            "ty": 147
          },
          "event": {
            "ty": 46
          },
          "constants": [
            {
              "name": "ConfigDepositBase",
              "ty": 6,
              "value": [
                10,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for creating a recovery configuration.",
                "",
                " This is held for an additional storage item whose value size is",
                " `2 + sizeof(BlockNumber, Balance)` bytes."
              ]
            },
            {
              "name": "FriendDepositFactor",
              "ty": 6,
              "value": [
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of currency needed per additional user when creating a recovery",
                " configuration.",
                "",
                " This is held for adding `sizeof(AccountId)` bytes more into a pre-existing storage",
                " value."
              ]
            },
            {
              "name": "MaxFriends",
              "ty": 4,
              "value": [
                3,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum amount of friends allowed in a recovery configuration.",
                "",
                " NOTE: The threshold programmed in this Pallet uses u16, so it does",
                " not really make sense to have a limit here greater than u16::MAX.",
                " But also, that is a lot more than you should probably set this value",
                " to anyway..."
              ]
            },
            {
              "name": "RecoveryDeposit",
              "ty": 6,
              "value": [
                10,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The base amount of currency needed to reserve for starting a recovery.",
                "",
                " This is primarily held for deterring malicious recovery attempts, and should",
                " have a value large enough that a bad actor would choose not to place this",
                " deposit. It also acts to fund additional storage item whose value size is",
                " `sizeof(BlockNumber, Balance + T * AccountId)` bytes. Where T is a configurable",
                " threshold."
              ]
            }
          ],
          "error": {
            "ty": 190
          },
          "index": 12,
          "docs": []
        },
        {
          "name": "LoAuthorityList",
          "storage": {
            "prefix": "LoAuthorityList",
            "entries": [
              {
                "name": "LegalOfficerSet",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 149
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " All LOs indexed by their account ID."
                ]
              },
              {
                "name": "LegalOfficerNodes",
                "modifier": "Default",
                "ty": {
                  "Plain": 191
                },
                "default": [
                  0
                ],
                "docs": [
                  " The set of LO nodes."
                ]
              },
              {
                "name": "PalletStorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 193
                },
                "default": [
                  2
                ],
                "docs": [
                  " Storage version"
                ]
              }
            ]
          },
          "calls": {
            "ty": 148
          },
          "event": {
            "ty": 47
          },
          "constants": [],
          "error": {
            "ty": 194
          },
          "index": 14,
          "docs": []
        },
        {
          "name": "LogionLoc",
          "storage": {
            "prefix": "LogionLoc",
            "entries": [
              {
                "name": "LocMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 6,
                    "value": 195
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " All LOCs indexed by ID."
                ]
              },
              {
                "name": "AccountLocsMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 207
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Requested LOCs by account ID."
                ]
              },
              {
                "name": "IdentityLocLocsMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 6,
                    "value": 207
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Requested LOCs by logion Identity LOC."
                ]
              },
              {
                "name": "OtherAccountLocsMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 52,
                    "value": 207
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Requested LOCs by other requester."
                ]
              },
              {
                "name": "CollectionItemsMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 208,
                    "value": 209
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Collection items by LOC ID."
                ]
              },
              {
                "name": "CollectionSizeMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 6,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Collection size by LOC ID."
                ]
              },
              {
                "name": "TokensRecordsMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 208,
                    "value": 210
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Collection tokens records by LOC ID and record ID."
                ]
              },
              {
                "name": "VerifiedIssuersMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 188,
                    "value": 212
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Verified Issuers by owner"
                ]
              },
              {
                "name": "VerifiedIssuersByLocMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 213,
                    "value": 42
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Verified Issuers by LOC"
                ]
              },
              {
                "name": "LocsByVerifiedIssuerMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 214,
                    "value": 42
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " LOCs by Verified Issuer"
                ]
              },
              {
                "name": "SponsorshipMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 6,
                    "value": 215
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Sponsorships indexed by ID"
                ]
              },
              {
                "name": "InvitedContributorsByLocMap",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 213,
                    "value": 42
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Invited Contributors by LOC"
                ]
              },
              {
                "name": "PalletStorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 216
                },
                "default": [
                  21
                ],
                "docs": [
                  " Storage version"
                ]
              }
            ]
          },
          "calls": {
            "ty": 155
          },
          "event": {
            "ty": 48
          },
          "constants": [],
          "error": {
            "ty": 217
          },
          "index": 15,
          "docs": []
        },
        {
          "name": "VerifiedRecovery",
          "storage": null,
          "calls": {
            "ty": 172
          },
          "event": {
            "ty": 54
          },
          "constants": [],
          "error": {
            "ty": 218
          },
          "index": 16,
          "docs": []
        },
        {
          "name": "Vault",
          "storage": null,
          "calls": {
            "ty": 173
          },
          "event": {
            "ty": 55
          },
          "constants": [],
          "error": {
            "ty": 219
          },
          "index": 17,
          "docs": []
        },
        {
          "name": "Vote",
          "storage": {
            "prefix": "Vote",
            "entries": [
              {
                "name": "LastVoteId",
                "modifier": "Default",
                "ty": {
                  "Plain": 11
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  ""
                ]
              },
              {
                "name": "Votes",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 11,
                    "value": 220
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Votes"
                ]
              }
            ]
          },
          "calls": {
            "ty": 174
          },
          "event": {
            "ty": 56
          },
          "constants": [],
          "error": {
            "ty": 222
          },
          "index": 18,
          "docs": []
        },
        {
          "name": "BlockReward",
          "storage": null,
          "calls": null,
          "event": null,
          "constants": [
            {
              "name": "RewardAmount",
              "ty": 6,
              "value": [
                0,
                0,
                232,
                137,
                4,
                35,
                199,
                138,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of issuance for each block."
              ]
            }
          ],
          "error": null,
          "index": 20,
          "docs": []
        },
        {
          "name": "LogionTreasury",
          "storage": {
            "prefix": "LogionTreasury",
            "entries": [
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of proposals that have been made."
                ]
              },
              {
                "name": "Proposals",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 223
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Proposals that have been made."
                ]
              },
              {
                "name": "Deactivated",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount which has been reported as inactive to Currency."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Default",
                "ty": {
                  "Plain": 224
                },
                "default": [
                  0
                ],
                "docs": [
                  " Proposal indices that have been approved but not yet awarded."
                ]
              },
              {
                "name": "SpendCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The count of spends that have been made."
                ]
              },
              {
                "name": "Spends",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 225
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Spends that have been approved and being processed."
                ]
              }
            ]
          },
          "calls": {
            "ty": 175
          },
          "event": {
            "ty": 61
          },
          "constants": [
            {
              "name": "ProposalBond",
              "ty": 227,
              "value": [
                80,
                195,
                0,
                0
              ],
              "docs": [
                " Fraction of a proposal's value that should be bonded in order to place the proposal.",
                " An accepted proposal gets these back. A rejected proposal does not."
              ]
            },
            {
              "name": "ProposalBondMinimum",
              "ty": 6,
              "value": [
                0,
                0,
                16,
                99,
                45,
                94,
                199,
                107,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "ProposalBondMaximum",
              "ty": 206,
              "value": [
                0
              ],
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "SpendPeriod",
              "ty": 4,
              "value": [
                64,
                56,
                0,
                0
              ],
              "docs": [
                " Period between successive spends."
              ]
            },
            {
              "name": "Burn",
              "ty": 227,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Percentage of spare funds (if any) that are burnt per spend period."
              ]
            },
            {
              "name": "PalletId",
              "ty": 228,
              "value": [
                108,
                103,
                47,
                108,
                103,
                116,
                114,
                115
              ],
              "docs": [
                " The treasury's pallet id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "MaxApprovals",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of approvals that can wait in the spending queue.",
                "",
                " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
              ]
            },
            {
              "name": "PayoutPeriod",
              "ty": 4,
              "value": [
                128,
                151,
                6,
                0
              ],
              "docs": [
                " The period during which an approved treasury spend has to be claimed."
              ]
            }
          ],
          "error": {
            "ty": 229
          },
          "index": 21,
          "docs": []
        },
        {
          "name": "CommunityTreasury",
          "storage": {
            "prefix": "CommunityTreasury",
            "entries": [
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of proposals that have been made."
                ]
              },
              {
                "name": "Proposals",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 223
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Proposals that have been made."
                ]
              },
              {
                "name": "Deactivated",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount which has been reported as inactive to Currency."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Default",
                "ty": {
                  "Plain": 224
                },
                "default": [
                  0
                ],
                "docs": [
                  " Proposal indices that have been approved but not yet awarded."
                ]
              },
              {
                "name": "SpendCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The count of spends that have been made."
                ]
              },
              {
                "name": "Spends",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 225
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Spends that have been approved and being processed."
                ]
              }
            ]
          },
          "calls": {
            "ty": 176
          },
          "event": {
            "ty": 62
          },
          "constants": [
            {
              "name": "ProposalBond",
              "ty": 227,
              "value": [
                80,
                195,
                0,
                0
              ],
              "docs": [
                " Fraction of a proposal's value that should be bonded in order to place the proposal.",
                " An accepted proposal gets these back. A rejected proposal does not."
              ]
            },
            {
              "name": "ProposalBondMinimum",
              "ty": 6,
              "value": [
                0,
                0,
                16,
                99,
                45,
                94,
                199,
                107,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "ProposalBondMaximum",
              "ty": 206,
              "value": [
                0
              ],
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "SpendPeriod",
              "ty": 4,
              "value": [
                64,
                56,
                0,
                0
              ],
              "docs": [
                " Period between successive spends."
              ]
            },
            {
              "name": "Burn",
              "ty": 227,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Percentage of spare funds (if any) that are burnt per spend period."
              ]
            },
            {
              "name": "PalletId",
              "ty": 228,
              "value": [
                108,
                103,
                47,
                99,
                109,
                116,
                114,
                115
              ],
              "docs": [
                " The treasury's pallet id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "MaxApprovals",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of approvals that can wait in the spending queue.",
                "",
                " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
              ]
            },
            {
              "name": "PayoutPeriod",
              "ty": 4,
              "value": [
                128,
                151,
                6,
                0
              ],
              "docs": [
                " The period during which an approved treasury spend has to be claimed."
              ]
            }
          ],
          "error": {
            "ty": 230
          },
          "index": 22,
          "docs": []
        },
        {
          "name": "Utility",
          "storage": null,
          "calls": {
            "ty": 177
          },
          "event": {
            "ty": 63
          },
          "constants": [
            {
              "name": "batched_calls_limit",
              "ty": 4,
              "value": [
                170,
                42,
                0,
                0
              ],
              "docs": [
                " The limit on the number of batched calls."
              ]
            }
          ],
          "error": {
            "ty": 231
          },
          "index": 23,
          "docs": []
        }
      ],
      "extrinsic": {
        "version": 4,
        "address_ty": 104,
        "call_ty": 144,
        "signature_ty": 232,
        "extra_ty": 236,
        "signed_extensions": [
          {
            "identifier": "CheckNonZeroSender",
            "ty": 237,
            "additional_signed": 42
          },
          {
            "identifier": "CheckSpecVersion",
            "ty": 238,
            "additional_signed": 4
          },
          {
            "identifier": "CheckTxVersion",
            "ty": 239,
            "additional_signed": 4
          },
          {
            "identifier": "CheckGenesis",
            "ty": 240,
            "additional_signed": 12
          },
          {
            "identifier": "CheckMortality",
            "ty": 241,
            "additional_signed": 12
          },
          {
            "identifier": "CheckNonce",
            "ty": 243,
            "additional_signed": 42
          },
          {
            "identifier": "CheckWeight",
            "ty": 244,
            "additional_signed": 42
          },
          {
            "identifier": "ChargeTransactionPayment",
            "ty": 245,
            "additional_signed": 42
          }
        ]
      },
      "ty": 246,
      "apis": [
        {
          "name": "Core",
          "methods": [
            {
              "name": "version",
              "inputs": [],
              "output": 82,
              "docs": [
                " Returns the version of the runtime."
              ]
            },
            {
              "name": "execute_block",
              "inputs": [
                {
                  "name": "block",
                  "ty": 247
                }
              ],
              "output": 42,
              "docs": [
                " Execute the given block."
              ]
            },
            {
              "name": "initialize_block",
              "inputs": [
                {
                  "name": "header",
                  "ty": 248
                }
              ],
              "output": 42,
              "docs": [
                " Initialize a block with the given header."
              ]
            }
          ],
          "docs": [
            " The `Core` runtime api that every Substrate runtime needs to implement."
          ]
        },
        {
          "name": "Metadata",
          "methods": [
            {
              "name": "metadata",
              "inputs": [],
              "output": 251,
              "docs": [
                " Returns the metadata of a runtime."
              ]
            },
            {
              "name": "metadata_at_version",
              "inputs": [
                {
                  "name": "version",
                  "ty": 4
                }
              ],
              "output": 252,
              "docs": [
                " Returns the metadata at a given version.",
                "",
                " If the given `version` isn't supported, this will return `None`.",
                " Use [`Self::metadata_versions`] to find out about supported metadata version of the runtime."
              ]
            },
            {
              "name": "metadata_versions",
              "inputs": [],
              "output": 115,
              "docs": [
                " Returns the supported metadata versions.",
                "",
                " This can be used to call `metadata_at_version`."
              ]
            }
          ],
          "docs": [
            " The `Metadata` api trait that returns metadata for the runtime."
          ]
        },
        {
          "name": "BlockBuilder",
          "methods": [
            {
              "name": "apply_extrinsic",
              "inputs": [
                {
                  "name": "extrinsic",
                  "ty": 249
                }
              ],
              "output": 253,
              "docs": [
                " Apply the given extrinsic.",
                "",
                " Returns an inclusion outcome which specifies if this extrinsic is included in",
                " this block or not."
              ]
            },
            {
              "name": "finalize_block",
              "inputs": [],
              "output": 248,
              "docs": [
                " Finish the current block."
              ]
            },
            {
              "name": "inherent_extrinsics",
              "inputs": [
                {
                  "name": "inherent",
                  "ty": 257
                }
              ],
              "output": 250,
              "docs": [
                " Generate inherent extrinsics. The inherent data will vary from chain to chain."
              ]
            },
            {
              "name": "check_inherents",
              "inputs": [
                {
                  "name": "block",
                  "ty": 247
                },
                {
                  "name": "data",
                  "ty": 257
                }
              ],
              "output": 261,
              "docs": [
                " Check that the inherents are valid. The inherent data will vary from chain to chain."
              ]
            }
          ],
          "docs": [
            " The `BlockBuilder` api trait that provides the required functionality for building a block."
          ]
        },
        {
          "name": "TaggedTransactionQueue",
          "methods": [
            {
              "name": "validate_transaction",
              "inputs": [
                {
                  "name": "source",
                  "ty": 262
                },
                {
                  "name": "tx",
                  "ty": 249
                },
                {
                  "name": "block_hash",
                  "ty": 12
                }
              ],
              "output": 263,
              "docs": [
                " Validate the transaction.",
                "",
                " This method is invoked by the transaction pool to learn details about given transaction.",
                " The implementation should make sure to verify the correctness of the transaction",
                " against current state. The given `block_hash` corresponds to the hash of the block",
                " that is used as current state.",
                "",
                " Note that this call may be performed by the pool multiple times and transactions",
                " might be verified in any possible order."
              ]
            }
          ],
          "docs": [
            " The `TaggedTransactionQueue` api trait for interfering with the transaction queue."
          ]
        },
        {
          "name": "OffchainWorkerApi",
          "methods": [
            {
              "name": "offchain_worker",
              "inputs": [
                {
                  "name": "header",
                  "ty": 248
                }
              ],
              "output": 42,
              "docs": [
                " Starts the off-chain task for given block header."
              ]
            }
          ],
          "docs": [
            " The offchain worker api."
          ]
        },
        {
          "name": "AuraApi",
          "methods": [
            {
              "name": "slot_duration",
              "inputs": [],
              "output": 265,
              "docs": [
                " Returns the slot duration for Aura.",
                "",
                " Currently, only the value provided by this type at genesis will be used."
              ]
            },
            {
              "name": "authorities",
              "inputs": [],
              "output": 121,
              "docs": [
                " Return the current set of authorities."
              ]
            }
          ],
          "docs": [
            " API necessary for block authorship with aura."
          ]
        },
        {
          "name": "SessionKeys",
          "methods": [
            {
              "name": "generate_session_keys",
              "inputs": [
                {
                  "name": "seed",
                  "ty": 154
                }
              ],
              "output": 13,
              "docs": [
                " Generate a set of session keys with optionally using the given seed.",
                " The keys should be stored within the keystore exposed via runtime",
                " externalities.",
                "",
                " The seed needs to be a valid `utf8` string.",
                "",
                " Returns the concatenated SCALE encoded public keys."
              ]
            },
            {
              "name": "decode_session_keys",
              "inputs": [
                {
                  "name": "encoded",
                  "ty": 13
                }
              ],
              "output": 266,
              "docs": [
                " Decode the given public session keys.",
                "",
                " Returns the list of public raw public keys + key type."
              ]
            }
          ],
          "docs": [
            " Session keys runtime api."
          ]
        },
        {
          "name": "GrandpaApi",
          "methods": [
            {
              "name": "grandpa_authorities",
              "inputs": [],
              "output": 35,
              "docs": [
                " Get the current GRANDPA authorities and weights. This should not change except",
                " for when changes are scheduled and the corresponding delay has passed.",
                "",
                " When called at block B, it will return the set of authorities that should be",
                " used to finalize descendants of this block (B+1, B+2, ...). The block B itself",
                " is finalized by the authorities from block B-1."
              ]
            },
            {
              "name": "submit_report_equivocation_unsigned_extrinsic",
              "inputs": [
                {
                  "name": "equivocation_proof",
                  "ty": 128
                },
                {
                  "name": "key_owner_proof",
                  "ty": 269
                }
              ],
              "output": 270,
              "docs": [
                " Submits an unsigned extrinsic to report an equivocation. The caller",
                " must provide the equivocation proof and a key ownership proof",
                " (should be obtained using `generate_key_ownership_proof`). The",
                " extrinsic will be unsigned and should only be accepted for local",
                " authorship (not to be broadcast to the network). This method returns",
                " `None` when creation of the extrinsic fails, e.g. if equivocation",
                " reporting is disabled for the given runtime (i.e. this method is",
                " hardcoded to return `None`). Only useful in an offchain context."
              ]
            },
            {
              "name": "generate_key_ownership_proof",
              "inputs": [
                {
                  "name": "set_id",
                  "ty": 11
                },
                {
                  "name": "authority_id",
                  "ty": 37
                }
              ],
              "output": 271,
              "docs": [
                " Generates a proof of key ownership for the given authority in the",
                " given set. An example usage of this module is coupled with the",
                " session historical module to prove that a given authority key is",
                " tied to a given staking identity during a specific session. Proofs",
                " of key ownership are necessary for submitting equivocation reports.",
                " NOTE: even though the API takes a `set_id` as parameter the current",
                " implementations ignore this parameter and instead rely on this",
                " method being called at the correct block height, i.e. any point at",
                " which the given set id is live on-chain. Future implementations will",
                " instead use indexed data through an offchain worker, not requiring",
                " older states to be available."
              ]
            },
            {
              "name": "current_set_id",
              "inputs": [],
              "output": 11,
              "docs": [
                " Get current GRANDPA authority set id."
              ]
            }
          ],
          "docs": [
            " APIs for integrating the GRANDPA finality gadget into runtimes.",
            " This should be implemented on the runtime side.",
            "",
            " This is primarily used for negotiating authority-set changes for the",
            " gadget. GRANDPA uses a signaling model of changing authority sets:",
            " changes should be signaled with a delay of N blocks, and then automatically",
            " applied in the runtime after those N blocks have passed.",
            "",
            " The consensus protocol will coordinate the handoff externally."
          ]
        },
        {
          "name": "AccountNonceApi",
          "methods": [
            {
              "name": "account_nonce",
              "inputs": [
                {
                  "name": "account",
                  "ty": 0
                }
              ],
              "output": 4,
              "docs": [
                " Get current account nonce of given `AccountId`."
              ]
            }
          ],
          "docs": [
            " The API to query account nonce."
          ]
        },
        {
          "name": "TransactionPaymentApi",
          "methods": [
            {
              "name": "query_info",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 249
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 272,
              "docs": []
            },
            {
              "name": "query_fee_details",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 249
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 273,
              "docs": []
            },
            {
              "name": "query_weight_to_fee",
              "inputs": [
                {
                  "name": "weight",
                  "ty": 9
                }
              ],
              "output": 6,
              "docs": []
            },
            {
              "name": "query_length_to_fee",
              "inputs": [
                {
                  "name": "length",
                  "ty": 4
                }
              ],
              "output": 6,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "FeesApi",
          "methods": [
            {
              "name": "query_file_storage_fee",
              "inputs": [
                {
                  "name": "num_of_entries",
                  "ty": 4
                },
                {
                  "name": "tot_size",
                  "ty": 4
                }
              ],
              "output": 6,
              "docs": [
                " Query expected fees for submitting given files"
              ]
            },
            {
              "name": "query_certificate_fee",
              "inputs": [
                {
                  "name": "token_issuance",
                  "ty": 11
                }
              ],
              "output": 6,
              "docs": [
                " Query expected item legal fees for adding an item with given type"
              ]
            }
          ],
          "docs": []
        },
        {
          "name": "GenesisBuilder",
          "methods": [
            {
              "name": "create_default_config",
              "inputs": [],
              "output": 13,
              "docs": [
                " Creates the default `GenesisConfig` and returns it as a JSON blob.",
                "",
                " This function instantiates the default `GenesisConfig` struct for the runtime and serializes it into a JSON",
                " blob. It returns a `Vec<u8>` containing the JSON representation of the default `GenesisConfig`."
              ]
            },
            {
              "name": "build_config",
              "inputs": [
                {
                  "name": "json",
                  "ty": 13
                }
              ],
              "output": 276,
              "docs": [
                " Build `GenesisConfig` from a JSON blob not using any defaults and store it in the storage.",
                "",
                " This function deserializes the full `GenesisConfig` from the given JSON blob and puts it into the storage.",
                " If the provided JSON blob is incorrect or incomplete or the deserialization fails, an error is returned.",
                " It is recommended to log any errors encountered during the process.",
                "",
                " Please note that provided json blob must contain all `GenesisConfig` fields, no defaults will be used."
              ]
            }
          ],
          "docs": [
            " API to interact with GenesisConfig for the runtime"
          ]
        }
      ],
      "outer_enums": {
        "call_enum_ty": 144,
        "event_enum_ty": 20,
        "error_enum_ty": 277
      },
      "custom": {
        "map": {}
      }
    }
  }
]